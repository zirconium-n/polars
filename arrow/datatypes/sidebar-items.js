initSidebarItems({"enum":[["DataType","The set of datatypes that are supported by this implementation of Apache Arrow."],["IntervalUnit","YEAR_MONTH or DAY_TIME interval in SQL style."],["TimeUnit","An absolute length of time in seconds, milliseconds, microseconds or nanoseconds."]],"struct":[["BooleanType",""],["Date32Type",""],["Date64Type",""],["DurationMicrosecondType",""],["DurationMillisecondType",""],["DurationNanosecondType",""],["DurationSecondType",""],["Field","Contains the meta-data for a single relative type."],["Float32Type",""],["Float64Type",""],["Int16Type",""],["Int32Type",""],["Int64Type",""],["Int8Type",""],["IntervalDayTimeType",""],["IntervalYearMonthType",""],["Schema","Describes the meta-data of an ordered sequence of relative types."],["Time32MillisecondType",""],["Time32SecondType",""],["Time64MicrosecondType",""],["Time64NanosecondType",""],["TimestampMicrosecondType",""],["TimestampMillisecondType",""],["TimestampNanosecondType",""],["TimestampSecondType",""],["UInt16Type",""],["UInt32Type",""],["UInt64Type",""],["UInt8Type",""]],"trait":[["ArrowDictionaryKeyType","A subtype of primitive type that represents legal dictionary keys. See https://arrow.apache.org/docs/format/Columnar.html"],["ArrowFloatNumericType",""],["ArrowNativeType","Trait expressing a Rust type that has the same in-memory representation as Arrow. This includes `i16`, `f32`, but excludes `bool` (which in arrow is represented in bits). In little endian machines, types that implement [`ArrowNativeType`] can be memcopied to arrow buffers as is."],["ArrowNumericType","A subtype of primitive type that represents numeric values."],["ArrowPrimitiveType","Trait bridging the dynamic-typed nature of Arrow (via [`DataType`]) with the static-typed nature of rust types ([`ArrowNativeType`]) for all types that implement [`ArrowNativeType`]."],["ArrowSignedNumericType","A subtype of primitive type that represents signed numeric values."],["ArrowTemporalType","A subtype of primitive type that represents temporal values."],["ArrowTimestampType","A timestamp type allows us to create array builders that take a timestamp."],["JsonSerializable","Trait declaring any type that is serializable to JSON. This includes all primitive types (bool, i32, etc.)."],["ToByteSlice","Allows conversion from supported Arrow types to a byte slice."]],"type":[["SchemaRef","A reference-counted reference to a `Schema`."]]});