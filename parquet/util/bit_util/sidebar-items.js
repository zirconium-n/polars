initSidebarItems({"constant":[["MAX_VLQ_BYTE_LEN","Maximum byte length for a VLQ encoded integer MAX_VLQ_BYTE_LEN = 5 for i32, and MAX_VLQ_BYTE_LEN = 10 for i64"]],"fn":[["ceil","Returns the ceil of value/divisor"],["convert_to_bytes","Converts value `val` of type `T` to a byte vector, by reading `num_bytes` from `val`. NOTE: if `val` is less than the size of `T` then it can be truncated."],["from_ne_slice",""],["get_bit","Returns whether bit at position `i` in `data` is set or not"],["log2","Returns ceil(log2(x))"],["memcpy",""],["memcpy_value",""],["num_required_bits","Returns the minimum number of bits needed to represent the value ‘x’"],["set_array_bit",""],["trailing_bits","Returns the `num_bits` least-significant bits of `v`"],["unset_array_bit",""]],"struct":[["BitReader",""],["BitWriter","Utility class for writing bit/byte streams. This class can write data in either bit packed or byte aligned fashion."]],"trait":[["FromBytes",""]]});