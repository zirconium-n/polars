Search.setIndex({docnames:["index","reference/api/polars.DataFrame","reference/api/polars.DataFrame.apply","reference/api/polars.DataFrame.clone","reference/api/polars.DataFrame.columns","reference/api/polars.DataFrame.describe","reference/api/polars.DataFrame.downsample","reference/api/polars.DataFrame.drop","reference/api/polars.DataFrame.drop_duplicates","reference/api/polars.DataFrame.drop_in_place","reference/api/polars.DataFrame.drop_nulls","reference/api/polars.DataFrame.dtypes","reference/api/polars.DataFrame.explode","reference/api/polars.DataFrame.fill_nan","reference/api/polars.DataFrame.fill_none","reference/api/polars.DataFrame.filter","reference/api/polars.DataFrame.fold","reference/api/polars.DataFrame.frame_equal","reference/api/polars.DataFrame.get_columns","reference/api/polars.DataFrame.groupby","reference/api/polars.DataFrame.hash_rows","reference/api/polars.DataFrame.head","reference/api/polars.DataFrame.height","reference/api/polars.DataFrame.hstack","reference/api/polars.DataFrame.insert_at_idx","reference/api/polars.DataFrame.interpolate","reference/api/polars.DataFrame.is_duplicated","reference/api/polars.DataFrame.is_unique","reference/api/polars.DataFrame.join","reference/api/polars.DataFrame.lazy","reference/api/polars.DataFrame.limit","reference/api/polars.DataFrame.max","reference/api/polars.DataFrame.mean","reference/api/polars.DataFrame.median","reference/api/polars.DataFrame.melt","reference/api/polars.DataFrame.min","reference/api/polars.DataFrame.n_chunks","reference/api/polars.DataFrame.null_count","reference/api/polars.DataFrame.pipe","reference/api/polars.DataFrame.quantile","reference/api/polars.DataFrame.rechunk","reference/api/polars.DataFrame.rename","reference/api/polars.DataFrame.replace","reference/api/polars.DataFrame.replace_at_idx","reference/api/polars.DataFrame.row","reference/api/polars.DataFrame.rows","reference/api/polars.DataFrame.sample","reference/api/polars.DataFrame.select","reference/api/polars.DataFrame.select_at_idx","reference/api/polars.DataFrame.shape","reference/api/polars.DataFrame.shift","reference/api/polars.DataFrame.shift_and_fill","reference/api/polars.DataFrame.shrink_to_fit","reference/api/polars.DataFrame.slice","reference/api/polars.DataFrame.sort","reference/api/polars.DataFrame.std","reference/api/polars.DataFrame.sum","reference/api/polars.DataFrame.tail","reference/api/polars.DataFrame.to_arrow","reference/api/polars.DataFrame.to_csv","reference/api/polars.DataFrame.to_dummies","reference/api/polars.DataFrame.to_ipc","reference/api/polars.DataFrame.to_json","reference/api/polars.DataFrame.to_numpy","reference/api/polars.DataFrame.to_pandas","reference/api/polars.DataFrame.to_parquet","reference/api/polars.DataFrame.var","reference/api/polars.DataFrame.vstack","reference/api/polars.DataFrame.width","reference/api/polars.DataFrame.with_column","reference/api/polars.DataFrame.with_columns","reference/api/polars.Expr","reference/api/polars.Expr.agg_groups","reference/api/polars.Expr.alias","reference/api/polars.Expr.apply","reference/api/polars.Expr.arg_sort","reference/api/polars.Expr.arg_unique","reference/api/polars.Expr.backward_fill","reference/api/polars.Expr.cast","reference/api/polars.Expr.count","reference/api/polars.Expr.cum_max","reference/api/polars.Expr.cum_min","reference/api/polars.Expr.cum_sum","reference/api/polars.Expr.dot","reference/api/polars.Expr.drop_nulls","reference/api/polars.Expr.dt","reference/api/polars.Expr.exclude","reference/api/polars.Expr.explode","reference/api/polars.Expr.fill_none","reference/api/polars.Expr.filter","reference/api/polars.Expr.first","reference/api/polars.Expr.flatten","reference/api/polars.Expr.forward_fill","reference/api/polars.Expr.hash","reference/api/polars.Expr.head","reference/api/polars.Expr.interpolate","reference/api/polars.Expr.is_between","reference/api/polars.Expr.is_duplicated","reference/api/polars.Expr.is_finite","reference/api/polars.Expr.is_first","reference/api/polars.Expr.is_in","reference/api/polars.Expr.is_infinite","reference/api/polars.Expr.is_nan","reference/api/polars.Expr.is_not","reference/api/polars.Expr.is_not_nan","reference/api/polars.Expr.is_not_null","reference/api/polars.Expr.is_null","reference/api/polars.Expr.is_unique","reference/api/polars.Expr.keep_name","reference/api/polars.Expr.last","reference/api/polars.Expr.list","reference/api/polars.Expr.map","reference/api/polars.Expr.max","reference/api/polars.Expr.mean","reference/api/polars.Expr.median","reference/api/polars.Expr.min","reference/api/polars.Expr.mode","reference/api/polars.Expr.n_unique","reference/api/polars.Expr.over","reference/api/polars.Expr.pow","reference/api/polars.Expr.quantile","reference/api/polars.Expr.reinterpret","reference/api/polars.Expr.repeat_by","reference/api/polars.Expr.reverse","reference/api/polars.Expr.round","reference/api/polars.Expr.shift","reference/api/polars.Expr.shift_and_fill","reference/api/polars.Expr.slice","reference/api/polars.Expr.sort","reference/api/polars.Expr.sort_by","reference/api/polars.Expr.std","reference/api/polars.Expr.str","reference/api/polars.Expr.sum","reference/api/polars.Expr.tail","reference/api/polars.Expr.take","reference/api/polars.Expr.take_every","reference/api/polars.Expr.unique","reference/api/polars.Expr.var","reference/api/polars.LazyFrame.cache","reference/api/polars.LazyFrame.collect","reference/api/polars.LazyFrame.describe_optimized_plan","reference/api/polars.LazyFrame.describe_plan","reference/api/polars.LazyFrame.drop_column","reference/api/polars.LazyFrame.drop_columns","reference/api/polars.LazyFrame.drop_duplicates","reference/api/polars.LazyFrame.drop_nulls","reference/api/polars.LazyFrame.explode","reference/api/polars.LazyFrame.fetch","reference/api/polars.LazyFrame.fill_nan","reference/api/polars.LazyFrame.fill_none","reference/api/polars.LazyFrame.filter","reference/api/polars.LazyFrame.first","reference/api/polars.LazyFrame.groupby","reference/api/polars.LazyFrame.head","reference/api/polars.LazyFrame.interpolate","reference/api/polars.LazyFrame.join","reference/api/polars.LazyFrame.last","reference/api/polars.LazyFrame.limit","reference/api/polars.LazyFrame.map","reference/api/polars.LazyFrame.max","reference/api/polars.LazyFrame.mean","reference/api/polars.LazyFrame.median","reference/api/polars.LazyFrame.melt","reference/api/polars.LazyFrame.min","reference/api/polars.LazyFrame.pipe","reference/api/polars.LazyFrame.quantile","reference/api/polars.LazyFrame.reverse","reference/api/polars.LazyFrame.select","reference/api/polars.LazyFrame.shift","reference/api/polars.LazyFrame.shift_and_fill","reference/api/polars.LazyFrame.show_graph","reference/api/polars.LazyFrame.slice","reference/api/polars.LazyFrame.sort","reference/api/polars.LazyFrame.std","reference/api/polars.LazyFrame.sum","reference/api/polars.LazyFrame.tail","reference/api/polars.LazyFrame.var","reference/api/polars.LazyFrame.with_column","reference/api/polars.LazyFrame.with_column_renamed","reference/api/polars.LazyFrame.with_columns","reference/api/polars.Series","reference/api/polars.Series.append","reference/api/polars.Series.apply","reference/api/polars.Series.arg_max","reference/api/polars.Series.arg_min","reference/api/polars.Series.arg_sort","reference/api/polars.Series.arg_true","reference/api/polars.Series.arg_unique","reference/api/polars.Series.argsort","reference/api/polars.Series.cast","reference/api/polars.Series.chunk_lengths","reference/api/polars.Series.clone","reference/api/polars.Series.cum_max","reference/api/polars.Series.cum_min","reference/api/polars.Series.cum_sum","reference/api/polars.Series.describe","reference/api/polars.Series.dot","reference/api/polars.Series.drop_nulls","reference/api/polars.Series.dt","reference/api/polars.Series.dtype","reference/api/polars.Series.explode","reference/api/polars.Series.fill_none","reference/api/polars.Series.filter","reference/api/polars.Series.hash","reference/api/polars.Series.head","reference/api/polars.Series.interpolate","reference/api/polars.Series.is_boolean","reference/api/polars.Series.is_duplicated","reference/api/polars.Series.is_finite","reference/api/polars.Series.is_first","reference/api/polars.Series.is_float","reference/api/polars.Series.is_in","reference/api/polars.Series.is_infinite","reference/api/polars.Series.is_nan","reference/api/polars.Series.is_not_nan","reference/api/polars.Series.is_not_null","reference/api/polars.Series.is_null","reference/api/polars.Series.is_numeric","reference/api/polars.Series.is_unique","reference/api/polars.Series.is_utf8","reference/api/polars.Series.len","reference/api/polars.Series.limit","reference/api/polars.Series.max","reference/api/polars.Series.mean","reference/api/polars.Series.median","reference/api/polars.Series.min","reference/api/polars.Series.mode","reference/api/polars.Series.n_chunks","reference/api/polars.Series.n_unique","reference/api/polars.Series.name","reference/api/polars.Series.null_count","reference/api/polars.Series.peak_max","reference/api/polars.Series.peak_min","reference/api/polars.Series.quantile","reference/api/polars.Series.rechunk","reference/api/polars.Series.reinterpret","reference/api/polars.Series.rename","reference/api/polars.Series.rolling_max","reference/api/polars.Series.rolling_mean","reference/api/polars.Series.rolling_min","reference/api/polars.Series.rolling_sum","reference/api/polars.Series.round","reference/api/polars.Series.sample","reference/api/polars.Series.series_equal","reference/api/polars.Series.set","reference/api/polars.Series.set_at_idx","reference/api/polars.Series.shape","reference/api/polars.Series.shift","reference/api/polars.Series.shrink_to_fit","reference/api/polars.Series.slice","reference/api/polars.Series.sort","reference/api/polars.Series.std","reference/api/polars.Series.str","reference/api/polars.Series.sum","reference/api/polars.Series.tail","reference/api/polars.Series.take","reference/api/polars.Series.take_every","reference/api/polars.Series.to_arrow","reference/api/polars.Series.to_frame","reference/api/polars.Series.to_list","reference/api/polars.Series.to_numpy","reference/api/polars.Series.unique","reference/api/polars.Series.value_counts","reference/api/polars.Series.var","reference/api/polars.Series.view","reference/api/polars.Series.zip_with","reference/api/polars.StringCache","reference/api/polars.all","reference/api/polars.any","reference/api/polars.arange","reference/api/polars.arg_where","reference/api/polars.argsort_by","reference/api/polars.avg","reference/api/polars.col","reference/api/polars.concat","reference/api/polars.concat_str","reference/api/polars.count","reference/api/polars.cov","reference/api/polars.eager.frame.GroupBy.agg","reference/api/polars.eager.frame.GroupBy.agg_list","reference/api/polars.eager.frame.GroupBy.apply","reference/api/polars.eager.frame.GroupBy.count","reference/api/polars.eager.frame.GroupBy.first","reference/api/polars.eager.frame.GroupBy.get_group","reference/api/polars.eager.frame.GroupBy.groups","reference/api/polars.eager.frame.GroupBy.head","reference/api/polars.eager.frame.GroupBy.last","reference/api/polars.eager.frame.GroupBy.max","reference/api/polars.eager.frame.GroupBy.mean","reference/api/polars.eager.frame.GroupBy.median","reference/api/polars.eager.frame.GroupBy.min","reference/api/polars.eager.frame.GroupBy.n_unique","reference/api/polars.eager.frame.GroupBy.pivot","reference/api/polars.eager.frame.GroupBy.quantile","reference/api/polars.eager.frame.GroupBy.select","reference/api/polars.eager.frame.GroupBy.select_all","reference/api/polars.eager.frame.GroupBy.sum","reference/api/polars.eager.frame.GroupBy.tail","reference/api/polars.eager.frame.PivotOps.count","reference/api/polars.eager.frame.PivotOps.first","reference/api/polars.eager.frame.PivotOps.max","reference/api/polars.eager.frame.PivotOps.mean","reference/api/polars.eager.frame.PivotOps.median","reference/api/polars.eager.frame.PivotOps.min","reference/api/polars.eager.frame.PivotOps.sum","reference/api/polars.eager.series.DateTimeNameSpace.day","reference/api/polars.eager.series.DateTimeNameSpace.hour","reference/api/polars.eager.series.DateTimeNameSpace.max","reference/api/polars.eager.series.DateTimeNameSpace.mean","reference/api/polars.eager.series.DateTimeNameSpace.median","reference/api/polars.eager.series.DateTimeNameSpace.min","reference/api/polars.eager.series.DateTimeNameSpace.minute","reference/api/polars.eager.series.DateTimeNameSpace.month","reference/api/polars.eager.series.DateTimeNameSpace.nanosecond","reference/api/polars.eager.series.DateTimeNameSpace.ordinal_day","reference/api/polars.eager.series.DateTimeNameSpace.round","reference/api/polars.eager.series.DateTimeNameSpace.second","reference/api/polars.eager.series.DateTimeNameSpace.strftime","reference/api/polars.eager.series.DateTimeNameSpace.timestamp","reference/api/polars.eager.series.DateTimeNameSpace.to_python_datetime","reference/api/polars.eager.series.DateTimeNameSpace.week","reference/api/polars.eager.series.DateTimeNameSpace.weekday","reference/api/polars.eager.series.DateTimeNameSpace.year","reference/api/polars.eager.series.StringNameSpace.contains","reference/api/polars.eager.series.StringNameSpace.json_path_match","reference/api/polars.eager.series.StringNameSpace.lengths","reference/api/polars.eager.series.StringNameSpace.lstrip","reference/api/polars.eager.series.StringNameSpace.replace","reference/api/polars.eager.series.StringNameSpace.replace_all","reference/api/polars.eager.series.StringNameSpace.rstrip","reference/api/polars.eager.series.StringNameSpace.slice","reference/api/polars.eager.series.StringNameSpace.strptime","reference/api/polars.eager.series.StringNameSpace.to_lowercase","reference/api/polars.eager.series.StringNameSpace.to_uppercase","reference/api/polars.first","reference/api/polars.fold","reference/api/polars.from_arrow","reference/api/polars.from_dict","reference/api/polars.from_pandas","reference/api/polars.from_records","reference/api/polars.get_dummies","reference/api/polars.groups","reference/api/polars.head","reference/api/polars.last","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.day","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.hour","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.minute","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.month","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.nanosecond","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.ordinal_day","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.round","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.second","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.strftime","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.timestamp","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.to_python_datetime","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.week","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.weekday","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.year","reference/api/polars.lazy.expr.ExprStringNameSpace.contains","reference/api/polars.lazy.expr.ExprStringNameSpace.json_path_match","reference/api/polars.lazy.expr.ExprStringNameSpace.lengths","reference/api/polars.lazy.expr.ExprStringNameSpace.replace","reference/api/polars.lazy.expr.ExprStringNameSpace.replace_all","reference/api/polars.lazy.expr.ExprStringNameSpace.slice","reference/api/polars.lazy.expr.ExprStringNameSpace.strptime","reference/api/polars.lazy.expr.ExprStringNameSpace.to_lowercase","reference/api/polars.lazy.expr.ExprStringNameSpace.to_uppercase","reference/api/polars.lazy.frame.LazyGroupBy.agg","reference/api/polars.lazy.frame.LazyGroupBy.apply","reference/api/polars.lazy.frame.LazyGroupBy.head","reference/api/polars.lazy.frame.LazyGroupBy.tail","reference/api/polars.lit","reference/api/polars.lit_date","reference/api/polars.map_binary","reference/api/polars.max","reference/api/polars.mean","reference/api/polars.median","reference/api/polars.min","reference/api/polars.n_unique","reference/api/polars.pearson_corr","reference/api/polars.quantile","reference/api/polars.read_csv","reference/api/polars.read_ipc","reference/api/polars.read_json","reference/api/polars.read_parquet","reference/api/polars.read_sql","reference/api/polars.repeat","reference/api/polars.scan_csv","reference/api/polars.scan_parquet","reference/api/polars.std","reference/api/polars.sum","reference/api/polars.tail","reference/api/polars.to_list","reference/api/polars.toggle_string_cache","reference/api/polars.var","reference/api/polars.when","reference/dataframe","reference/expression","reference/functions","reference/index","reference/io","reference/lazyframe","reference/series"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":4,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":3,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.intersphinx":1,"sphinx.ext.todo":2,sphinx:56},filenames:["index.rst","reference/api/polars.DataFrame.rst","reference/api/polars.DataFrame.apply.rst","reference/api/polars.DataFrame.clone.rst","reference/api/polars.DataFrame.columns.rst","reference/api/polars.DataFrame.describe.rst","reference/api/polars.DataFrame.downsample.rst","reference/api/polars.DataFrame.drop.rst","reference/api/polars.DataFrame.drop_duplicates.rst","reference/api/polars.DataFrame.drop_in_place.rst","reference/api/polars.DataFrame.drop_nulls.rst","reference/api/polars.DataFrame.dtypes.rst","reference/api/polars.DataFrame.explode.rst","reference/api/polars.DataFrame.fill_nan.rst","reference/api/polars.DataFrame.fill_none.rst","reference/api/polars.DataFrame.filter.rst","reference/api/polars.DataFrame.fold.rst","reference/api/polars.DataFrame.frame_equal.rst","reference/api/polars.DataFrame.get_columns.rst","reference/api/polars.DataFrame.groupby.rst","reference/api/polars.DataFrame.hash_rows.rst","reference/api/polars.DataFrame.head.rst","reference/api/polars.DataFrame.height.rst","reference/api/polars.DataFrame.hstack.rst","reference/api/polars.DataFrame.insert_at_idx.rst","reference/api/polars.DataFrame.interpolate.rst","reference/api/polars.DataFrame.is_duplicated.rst","reference/api/polars.DataFrame.is_unique.rst","reference/api/polars.DataFrame.join.rst","reference/api/polars.DataFrame.lazy.rst","reference/api/polars.DataFrame.limit.rst","reference/api/polars.DataFrame.max.rst","reference/api/polars.DataFrame.mean.rst","reference/api/polars.DataFrame.median.rst","reference/api/polars.DataFrame.melt.rst","reference/api/polars.DataFrame.min.rst","reference/api/polars.DataFrame.n_chunks.rst","reference/api/polars.DataFrame.null_count.rst","reference/api/polars.DataFrame.pipe.rst","reference/api/polars.DataFrame.quantile.rst","reference/api/polars.DataFrame.rechunk.rst","reference/api/polars.DataFrame.rename.rst","reference/api/polars.DataFrame.replace.rst","reference/api/polars.DataFrame.replace_at_idx.rst","reference/api/polars.DataFrame.row.rst","reference/api/polars.DataFrame.rows.rst","reference/api/polars.DataFrame.sample.rst","reference/api/polars.DataFrame.select.rst","reference/api/polars.DataFrame.select_at_idx.rst","reference/api/polars.DataFrame.shape.rst","reference/api/polars.DataFrame.shift.rst","reference/api/polars.DataFrame.shift_and_fill.rst","reference/api/polars.DataFrame.shrink_to_fit.rst","reference/api/polars.DataFrame.slice.rst","reference/api/polars.DataFrame.sort.rst","reference/api/polars.DataFrame.std.rst","reference/api/polars.DataFrame.sum.rst","reference/api/polars.DataFrame.tail.rst","reference/api/polars.DataFrame.to_arrow.rst","reference/api/polars.DataFrame.to_csv.rst","reference/api/polars.DataFrame.to_dummies.rst","reference/api/polars.DataFrame.to_ipc.rst","reference/api/polars.DataFrame.to_json.rst","reference/api/polars.DataFrame.to_numpy.rst","reference/api/polars.DataFrame.to_pandas.rst","reference/api/polars.DataFrame.to_parquet.rst","reference/api/polars.DataFrame.var.rst","reference/api/polars.DataFrame.vstack.rst","reference/api/polars.DataFrame.width.rst","reference/api/polars.DataFrame.with_column.rst","reference/api/polars.DataFrame.with_columns.rst","reference/api/polars.Expr.rst","reference/api/polars.Expr.agg_groups.rst","reference/api/polars.Expr.alias.rst","reference/api/polars.Expr.apply.rst","reference/api/polars.Expr.arg_sort.rst","reference/api/polars.Expr.arg_unique.rst","reference/api/polars.Expr.backward_fill.rst","reference/api/polars.Expr.cast.rst","reference/api/polars.Expr.count.rst","reference/api/polars.Expr.cum_max.rst","reference/api/polars.Expr.cum_min.rst","reference/api/polars.Expr.cum_sum.rst","reference/api/polars.Expr.dot.rst","reference/api/polars.Expr.drop_nulls.rst","reference/api/polars.Expr.dt.rst","reference/api/polars.Expr.exclude.rst","reference/api/polars.Expr.explode.rst","reference/api/polars.Expr.fill_none.rst","reference/api/polars.Expr.filter.rst","reference/api/polars.Expr.first.rst","reference/api/polars.Expr.flatten.rst","reference/api/polars.Expr.forward_fill.rst","reference/api/polars.Expr.hash.rst","reference/api/polars.Expr.head.rst","reference/api/polars.Expr.interpolate.rst","reference/api/polars.Expr.is_between.rst","reference/api/polars.Expr.is_duplicated.rst","reference/api/polars.Expr.is_finite.rst","reference/api/polars.Expr.is_first.rst","reference/api/polars.Expr.is_in.rst","reference/api/polars.Expr.is_infinite.rst","reference/api/polars.Expr.is_nan.rst","reference/api/polars.Expr.is_not.rst","reference/api/polars.Expr.is_not_nan.rst","reference/api/polars.Expr.is_not_null.rst","reference/api/polars.Expr.is_null.rst","reference/api/polars.Expr.is_unique.rst","reference/api/polars.Expr.keep_name.rst","reference/api/polars.Expr.last.rst","reference/api/polars.Expr.list.rst","reference/api/polars.Expr.map.rst","reference/api/polars.Expr.max.rst","reference/api/polars.Expr.mean.rst","reference/api/polars.Expr.median.rst","reference/api/polars.Expr.min.rst","reference/api/polars.Expr.mode.rst","reference/api/polars.Expr.n_unique.rst","reference/api/polars.Expr.over.rst","reference/api/polars.Expr.pow.rst","reference/api/polars.Expr.quantile.rst","reference/api/polars.Expr.reinterpret.rst","reference/api/polars.Expr.repeat_by.rst","reference/api/polars.Expr.reverse.rst","reference/api/polars.Expr.round.rst","reference/api/polars.Expr.shift.rst","reference/api/polars.Expr.shift_and_fill.rst","reference/api/polars.Expr.slice.rst","reference/api/polars.Expr.sort.rst","reference/api/polars.Expr.sort_by.rst","reference/api/polars.Expr.std.rst","reference/api/polars.Expr.str.rst","reference/api/polars.Expr.sum.rst","reference/api/polars.Expr.tail.rst","reference/api/polars.Expr.take.rst","reference/api/polars.Expr.take_every.rst","reference/api/polars.Expr.unique.rst","reference/api/polars.Expr.var.rst","reference/api/polars.LazyFrame.cache.rst","reference/api/polars.LazyFrame.collect.rst","reference/api/polars.LazyFrame.describe_optimized_plan.rst","reference/api/polars.LazyFrame.describe_plan.rst","reference/api/polars.LazyFrame.drop_column.rst","reference/api/polars.LazyFrame.drop_columns.rst","reference/api/polars.LazyFrame.drop_duplicates.rst","reference/api/polars.LazyFrame.drop_nulls.rst","reference/api/polars.LazyFrame.explode.rst","reference/api/polars.LazyFrame.fetch.rst","reference/api/polars.LazyFrame.fill_nan.rst","reference/api/polars.LazyFrame.fill_none.rst","reference/api/polars.LazyFrame.filter.rst","reference/api/polars.LazyFrame.first.rst","reference/api/polars.LazyFrame.groupby.rst","reference/api/polars.LazyFrame.head.rst","reference/api/polars.LazyFrame.interpolate.rst","reference/api/polars.LazyFrame.join.rst","reference/api/polars.LazyFrame.last.rst","reference/api/polars.LazyFrame.limit.rst","reference/api/polars.LazyFrame.map.rst","reference/api/polars.LazyFrame.max.rst","reference/api/polars.LazyFrame.mean.rst","reference/api/polars.LazyFrame.median.rst","reference/api/polars.LazyFrame.melt.rst","reference/api/polars.LazyFrame.min.rst","reference/api/polars.LazyFrame.pipe.rst","reference/api/polars.LazyFrame.quantile.rst","reference/api/polars.LazyFrame.reverse.rst","reference/api/polars.LazyFrame.select.rst","reference/api/polars.LazyFrame.shift.rst","reference/api/polars.LazyFrame.shift_and_fill.rst","reference/api/polars.LazyFrame.show_graph.rst","reference/api/polars.LazyFrame.slice.rst","reference/api/polars.LazyFrame.sort.rst","reference/api/polars.LazyFrame.std.rst","reference/api/polars.LazyFrame.sum.rst","reference/api/polars.LazyFrame.tail.rst","reference/api/polars.LazyFrame.var.rst","reference/api/polars.LazyFrame.with_column.rst","reference/api/polars.LazyFrame.with_column_renamed.rst","reference/api/polars.LazyFrame.with_columns.rst","reference/api/polars.Series.rst","reference/api/polars.Series.append.rst","reference/api/polars.Series.apply.rst","reference/api/polars.Series.arg_max.rst","reference/api/polars.Series.arg_min.rst","reference/api/polars.Series.arg_sort.rst","reference/api/polars.Series.arg_true.rst","reference/api/polars.Series.arg_unique.rst","reference/api/polars.Series.argsort.rst","reference/api/polars.Series.cast.rst","reference/api/polars.Series.chunk_lengths.rst","reference/api/polars.Series.clone.rst","reference/api/polars.Series.cum_max.rst","reference/api/polars.Series.cum_min.rst","reference/api/polars.Series.cum_sum.rst","reference/api/polars.Series.describe.rst","reference/api/polars.Series.dot.rst","reference/api/polars.Series.drop_nulls.rst","reference/api/polars.Series.dt.rst","reference/api/polars.Series.dtype.rst","reference/api/polars.Series.explode.rst","reference/api/polars.Series.fill_none.rst","reference/api/polars.Series.filter.rst","reference/api/polars.Series.hash.rst","reference/api/polars.Series.head.rst","reference/api/polars.Series.interpolate.rst","reference/api/polars.Series.is_boolean.rst","reference/api/polars.Series.is_duplicated.rst","reference/api/polars.Series.is_finite.rst","reference/api/polars.Series.is_first.rst","reference/api/polars.Series.is_float.rst","reference/api/polars.Series.is_in.rst","reference/api/polars.Series.is_infinite.rst","reference/api/polars.Series.is_nan.rst","reference/api/polars.Series.is_not_nan.rst","reference/api/polars.Series.is_not_null.rst","reference/api/polars.Series.is_null.rst","reference/api/polars.Series.is_numeric.rst","reference/api/polars.Series.is_unique.rst","reference/api/polars.Series.is_utf8.rst","reference/api/polars.Series.len.rst","reference/api/polars.Series.limit.rst","reference/api/polars.Series.max.rst","reference/api/polars.Series.mean.rst","reference/api/polars.Series.median.rst","reference/api/polars.Series.min.rst","reference/api/polars.Series.mode.rst","reference/api/polars.Series.n_chunks.rst","reference/api/polars.Series.n_unique.rst","reference/api/polars.Series.name.rst","reference/api/polars.Series.null_count.rst","reference/api/polars.Series.peak_max.rst","reference/api/polars.Series.peak_min.rst","reference/api/polars.Series.quantile.rst","reference/api/polars.Series.rechunk.rst","reference/api/polars.Series.reinterpret.rst","reference/api/polars.Series.rename.rst","reference/api/polars.Series.rolling_max.rst","reference/api/polars.Series.rolling_mean.rst","reference/api/polars.Series.rolling_min.rst","reference/api/polars.Series.rolling_sum.rst","reference/api/polars.Series.round.rst","reference/api/polars.Series.sample.rst","reference/api/polars.Series.series_equal.rst","reference/api/polars.Series.set.rst","reference/api/polars.Series.set_at_idx.rst","reference/api/polars.Series.shape.rst","reference/api/polars.Series.shift.rst","reference/api/polars.Series.shrink_to_fit.rst","reference/api/polars.Series.slice.rst","reference/api/polars.Series.sort.rst","reference/api/polars.Series.std.rst","reference/api/polars.Series.str.rst","reference/api/polars.Series.sum.rst","reference/api/polars.Series.tail.rst","reference/api/polars.Series.take.rst","reference/api/polars.Series.take_every.rst","reference/api/polars.Series.to_arrow.rst","reference/api/polars.Series.to_frame.rst","reference/api/polars.Series.to_list.rst","reference/api/polars.Series.to_numpy.rst","reference/api/polars.Series.unique.rst","reference/api/polars.Series.value_counts.rst","reference/api/polars.Series.var.rst","reference/api/polars.Series.view.rst","reference/api/polars.Series.zip_with.rst","reference/api/polars.StringCache.rst","reference/api/polars.all.rst","reference/api/polars.any.rst","reference/api/polars.arange.rst","reference/api/polars.arg_where.rst","reference/api/polars.argsort_by.rst","reference/api/polars.avg.rst","reference/api/polars.col.rst","reference/api/polars.concat.rst","reference/api/polars.concat_str.rst","reference/api/polars.count.rst","reference/api/polars.cov.rst","reference/api/polars.eager.frame.GroupBy.agg.rst","reference/api/polars.eager.frame.GroupBy.agg_list.rst","reference/api/polars.eager.frame.GroupBy.apply.rst","reference/api/polars.eager.frame.GroupBy.count.rst","reference/api/polars.eager.frame.GroupBy.first.rst","reference/api/polars.eager.frame.GroupBy.get_group.rst","reference/api/polars.eager.frame.GroupBy.groups.rst","reference/api/polars.eager.frame.GroupBy.head.rst","reference/api/polars.eager.frame.GroupBy.last.rst","reference/api/polars.eager.frame.GroupBy.max.rst","reference/api/polars.eager.frame.GroupBy.mean.rst","reference/api/polars.eager.frame.GroupBy.median.rst","reference/api/polars.eager.frame.GroupBy.min.rst","reference/api/polars.eager.frame.GroupBy.n_unique.rst","reference/api/polars.eager.frame.GroupBy.pivot.rst","reference/api/polars.eager.frame.GroupBy.quantile.rst","reference/api/polars.eager.frame.GroupBy.select.rst","reference/api/polars.eager.frame.GroupBy.select_all.rst","reference/api/polars.eager.frame.GroupBy.sum.rst","reference/api/polars.eager.frame.GroupBy.tail.rst","reference/api/polars.eager.frame.PivotOps.count.rst","reference/api/polars.eager.frame.PivotOps.first.rst","reference/api/polars.eager.frame.PivotOps.max.rst","reference/api/polars.eager.frame.PivotOps.mean.rst","reference/api/polars.eager.frame.PivotOps.median.rst","reference/api/polars.eager.frame.PivotOps.min.rst","reference/api/polars.eager.frame.PivotOps.sum.rst","reference/api/polars.eager.series.DateTimeNameSpace.day.rst","reference/api/polars.eager.series.DateTimeNameSpace.hour.rst","reference/api/polars.eager.series.DateTimeNameSpace.max.rst","reference/api/polars.eager.series.DateTimeNameSpace.mean.rst","reference/api/polars.eager.series.DateTimeNameSpace.median.rst","reference/api/polars.eager.series.DateTimeNameSpace.min.rst","reference/api/polars.eager.series.DateTimeNameSpace.minute.rst","reference/api/polars.eager.series.DateTimeNameSpace.month.rst","reference/api/polars.eager.series.DateTimeNameSpace.nanosecond.rst","reference/api/polars.eager.series.DateTimeNameSpace.ordinal_day.rst","reference/api/polars.eager.series.DateTimeNameSpace.round.rst","reference/api/polars.eager.series.DateTimeNameSpace.second.rst","reference/api/polars.eager.series.DateTimeNameSpace.strftime.rst","reference/api/polars.eager.series.DateTimeNameSpace.timestamp.rst","reference/api/polars.eager.series.DateTimeNameSpace.to_python_datetime.rst","reference/api/polars.eager.series.DateTimeNameSpace.week.rst","reference/api/polars.eager.series.DateTimeNameSpace.weekday.rst","reference/api/polars.eager.series.DateTimeNameSpace.year.rst","reference/api/polars.eager.series.StringNameSpace.contains.rst","reference/api/polars.eager.series.StringNameSpace.json_path_match.rst","reference/api/polars.eager.series.StringNameSpace.lengths.rst","reference/api/polars.eager.series.StringNameSpace.lstrip.rst","reference/api/polars.eager.series.StringNameSpace.replace.rst","reference/api/polars.eager.series.StringNameSpace.replace_all.rst","reference/api/polars.eager.series.StringNameSpace.rstrip.rst","reference/api/polars.eager.series.StringNameSpace.slice.rst","reference/api/polars.eager.series.StringNameSpace.strptime.rst","reference/api/polars.eager.series.StringNameSpace.to_lowercase.rst","reference/api/polars.eager.series.StringNameSpace.to_uppercase.rst","reference/api/polars.first.rst","reference/api/polars.fold.rst","reference/api/polars.from_arrow.rst","reference/api/polars.from_dict.rst","reference/api/polars.from_pandas.rst","reference/api/polars.from_records.rst","reference/api/polars.get_dummies.rst","reference/api/polars.groups.rst","reference/api/polars.head.rst","reference/api/polars.last.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.day.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.hour.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.minute.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.month.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.nanosecond.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.ordinal_day.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.round.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.second.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.strftime.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.timestamp.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.to_python_datetime.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.week.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.weekday.rst","reference/api/polars.lazy.expr.ExprDateTimeNameSpace.year.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.contains.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.json_path_match.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.lengths.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.replace.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.replace_all.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.slice.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.strptime.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.to_lowercase.rst","reference/api/polars.lazy.expr.ExprStringNameSpace.to_uppercase.rst","reference/api/polars.lazy.frame.LazyGroupBy.agg.rst","reference/api/polars.lazy.frame.LazyGroupBy.apply.rst","reference/api/polars.lazy.frame.LazyGroupBy.head.rst","reference/api/polars.lazy.frame.LazyGroupBy.tail.rst","reference/api/polars.lit.rst","reference/api/polars.lit_date.rst","reference/api/polars.map_binary.rst","reference/api/polars.max.rst","reference/api/polars.mean.rst","reference/api/polars.median.rst","reference/api/polars.min.rst","reference/api/polars.n_unique.rst","reference/api/polars.pearson_corr.rst","reference/api/polars.quantile.rst","reference/api/polars.read_csv.rst","reference/api/polars.read_ipc.rst","reference/api/polars.read_json.rst","reference/api/polars.read_parquet.rst","reference/api/polars.read_sql.rst","reference/api/polars.repeat.rst","reference/api/polars.scan_csv.rst","reference/api/polars.scan_parquet.rst","reference/api/polars.std.rst","reference/api/polars.sum.rst","reference/api/polars.tail.rst","reference/api/polars.to_list.rst","reference/api/polars.toggle_string_cache.rst","reference/api/polars.var.rst","reference/api/polars.when.rst","reference/dataframe.rst","reference/expression.rst","reference/functions.rst","reference/index.rst","reference/io.rst","reference/lazyframe.rst","reference/series.rst"],objects:{"polars.DataFrame":{"var":[66,1,1,""],__init__:[1,1,1,""],apply:[2,1,1,""],clone:[3,1,1,""],columns:[4,2,1,""],describe:[5,1,1,""],downsample:[6,1,1,""],drop:[7,1,1,""],drop_duplicates:[8,1,1,""],drop_in_place:[9,1,1,""],drop_nulls:[10,1,1,""],dtypes:[11,2,1,""],explode:[12,1,1,""],fill_nan:[13,1,1,""],fill_none:[14,1,1,""],filter:[15,1,1,""],fold:[16,1,1,""],frame_equal:[17,1,1,""],get_columns:[18,1,1,""],groupby:[19,1,1,""],hash_rows:[20,1,1,""],head:[21,1,1,""],height:[22,2,1,""],hstack:[23,1,1,""],insert_at_idx:[24,1,1,""],interpolate:[25,1,1,""],is_duplicated:[26,1,1,""],is_unique:[27,1,1,""],join:[28,1,1,""],lazy:[29,1,1,""],limit:[30,1,1,""],max:[31,1,1,""],mean:[32,1,1,""],median:[33,1,1,""],melt:[34,1,1,""],min:[35,1,1,""],n_chunks:[36,1,1,""],null_count:[37,1,1,""],pipe:[38,1,1,""],quantile:[39,1,1,""],rechunk:[40,1,1,""],rename:[41,1,1,""],replace:[42,1,1,""],replace_at_idx:[43,1,1,""],row:[44,1,1,""],rows:[45,1,1,""],sample:[46,1,1,""],select:[47,1,1,""],select_at_idx:[48,1,1,""],shape:[49,2,1,""],shift:[50,1,1,""],shift_and_fill:[51,1,1,""],shrink_to_fit:[52,1,1,""],slice:[53,1,1,""],sort:[54,1,1,""],std:[55,1,1,""],sum:[56,1,1,""],tail:[57,1,1,""],to_arrow:[58,1,1,""],to_csv:[59,1,1,""],to_dummies:[60,1,1,""],to_ipc:[61,1,1,""],to_json:[62,1,1,""],to_numpy:[63,1,1,""],to_pandas:[64,1,1,""],to_parquet:[65,1,1,""],vstack:[67,1,1,""],width:[68,2,1,""],with_column:[69,1,1,""],with_columns:[70,1,1,""]},"polars.Expr":{"var":[137,1,1,""],__init__:[71,1,1,""],agg_groups:[72,1,1,""],alias:[73,1,1,""],apply:[74,1,1,""],arg_sort:[75,1,1,""],arg_unique:[76,1,1,""],backward_fill:[77,1,1,""],cast:[78,1,1,""],count:[79,1,1,""],cum_max:[80,1,1,""],cum_min:[81,1,1,""],cum_sum:[82,1,1,""],dot:[83,1,1,""],drop_nulls:[84,1,1,""],dt:[85,2,1,""],exclude:[86,1,1,""],explode:[87,1,1,""],fill_none:[88,1,1,""],filter:[89,1,1,""],first:[90,1,1,""],flatten:[91,1,1,""],forward_fill:[92,1,1,""],hash:[93,1,1,""],head:[94,1,1,""],interpolate:[95,1,1,""],is_between:[96,1,1,""],is_duplicated:[97,1,1,""],is_finite:[98,1,1,""],is_first:[99,1,1,""],is_in:[100,1,1,""],is_infinite:[101,1,1,""],is_nan:[102,1,1,""],is_not:[103,1,1,""],is_not_nan:[104,1,1,""],is_not_null:[105,1,1,""],is_null:[106,1,1,""],is_unique:[107,1,1,""],keep_name:[108,1,1,""],last:[109,1,1,""],list:[110,1,1,""],map:[111,1,1,""],max:[112,1,1,""],mean:[113,1,1,""],median:[114,1,1,""],min:[115,1,1,""],mode:[116,1,1,""],n_unique:[117,1,1,""],over:[118,1,1,""],pow:[119,1,1,""],quantile:[120,1,1,""],reinterpret:[121,1,1,""],repeat_by:[122,1,1,""],reverse:[123,1,1,""],round:[124,1,1,""],shift:[125,1,1,""],shift_and_fill:[126,1,1,""],slice:[127,1,1,""],sort:[128,1,1,""],sort_by:[129,1,1,""],std:[130,1,1,""],str:[131,2,1,""],sum:[132,1,1,""],tail:[133,1,1,""],take:[134,1,1,""],take_every:[135,1,1,""],unique:[136,1,1,""]},"polars.LazyFrame":{"var":[176,1,1,""],cache:[138,1,1,""],collect:[139,1,1,""],describe_optimized_plan:[140,1,1,""],describe_plan:[141,1,1,""],drop_column:[142,1,1,""],drop_columns:[143,1,1,""],drop_duplicates:[144,1,1,""],drop_nulls:[145,1,1,""],explode:[146,1,1,""],fetch:[147,1,1,""],fill_nan:[148,1,1,""],fill_none:[149,1,1,""],filter:[150,1,1,""],first:[151,1,1,""],groupby:[152,1,1,""],head:[153,1,1,""],interpolate:[154,1,1,""],join:[155,1,1,""],last:[156,1,1,""],limit:[157,1,1,""],map:[158,1,1,""],max:[159,1,1,""],mean:[160,1,1,""],median:[161,1,1,""],melt:[162,1,1,""],min:[163,1,1,""],pipe:[164,1,1,""],quantile:[165,1,1,""],reverse:[166,1,1,""],select:[167,1,1,""],shift:[168,1,1,""],shift_and_fill:[169,1,1,""],show_graph:[170,1,1,""],slice:[171,1,1,""],sort:[172,1,1,""],std:[173,1,1,""],sum:[174,1,1,""],tail:[175,1,1,""],with_column:[177,1,1,""],with_column_renamed:[178,1,1,""],with_columns:[179,1,1,""]},"polars.Series":{"var":[263,1,1,""],__init__:[180,1,1,""],append:[181,1,1,""],apply:[182,1,1,""],arg_max:[183,1,1,""],arg_min:[184,1,1,""],arg_sort:[185,1,1,""],arg_true:[186,1,1,""],arg_unique:[187,1,1,""],argsort:[188,1,1,""],cast:[189,1,1,""],chunk_lengths:[190,1,1,""],clone:[191,1,1,""],cum_max:[192,1,1,""],cum_min:[193,1,1,""],cum_sum:[194,1,1,""],describe:[195,1,1,""],dot:[196,1,1,""],drop_nulls:[197,1,1,""],dt:[198,2,1,""],dtype:[199,2,1,""],explode:[200,1,1,""],fill_none:[201,1,1,""],filter:[202,1,1,""],hash:[203,1,1,""],head:[204,1,1,""],interpolate:[205,1,1,""],is_boolean:[206,1,1,""],is_duplicated:[207,1,1,""],is_finite:[208,1,1,""],is_first:[209,1,1,""],is_float:[210,1,1,""],is_in:[211,1,1,""],is_infinite:[212,1,1,""],is_nan:[213,1,1,""],is_not_nan:[214,1,1,""],is_not_null:[215,1,1,""],is_null:[216,1,1,""],is_numeric:[217,1,1,""],is_unique:[218,1,1,""],is_utf8:[219,1,1,""],len:[220,1,1,""],limit:[221,1,1,""],max:[222,1,1,""],mean:[223,1,1,""],median:[224,1,1,""],min:[225,1,1,""],mode:[226,1,1,""],n_chunks:[227,1,1,""],n_unique:[228,1,1,""],name:[229,2,1,""],null_count:[230,1,1,""],peak_max:[231,1,1,""],peak_min:[232,1,1,""],quantile:[233,1,1,""],rechunk:[234,1,1,""],reinterpret:[235,1,1,""],rename:[236,1,1,""],rolling_max:[237,1,1,""],rolling_mean:[238,1,1,""],rolling_min:[239,1,1,""],rolling_sum:[240,1,1,""],round:[241,1,1,""],sample:[242,1,1,""],series_equal:[243,1,1,""],set:[244,1,1,""],set_at_idx:[245,1,1,""],shape:[246,2,1,""],shift:[247,1,1,""],shrink_to_fit:[248,1,1,""],slice:[249,1,1,""],sort:[250,1,1,""],std:[251,1,1,""],str:[252,2,1,""],sum:[253,1,1,""],tail:[254,1,1,""],take:[255,1,1,""],take_every:[256,1,1,""],to_arrow:[257,1,1,""],to_frame:[258,1,1,""],to_list:[259,1,1,""],to_numpy:[260,1,1,""],unique:[261,1,1,""],value_counts:[262,1,1,""],view:[264,1,1,""],zip_with:[265,1,1,""]},"polars.StringCache":{__init__:[266,1,1,""]},"polars.eager.frame.GroupBy":{agg:[278,1,1,""],agg_list:[279,1,1,""],apply:[280,1,1,""],count:[281,1,1,""],first:[282,1,1,""],get_group:[283,1,1,""],groups:[284,1,1,""],head:[285,1,1,""],last:[286,1,1,""],max:[287,1,1,""],mean:[288,1,1,""],median:[289,1,1,""],min:[290,1,1,""],n_unique:[291,1,1,""],pivot:[292,1,1,""],quantile:[293,1,1,""],select:[294,1,1,""],select_all:[295,1,1,""],sum:[296,1,1,""],tail:[297,1,1,""]},"polars.eager.frame.PivotOps":{count:[298,1,1,""],first:[299,1,1,""],max:[300,1,1,""],mean:[301,1,1,""],median:[302,1,1,""],min:[303,1,1,""],sum:[304,1,1,""]},"polars.eager.series.DateTimeNameSpace":{day:[305,1,1,""],hour:[306,1,1,""],max:[307,1,1,""],mean:[308,1,1,""],median:[309,1,1,""],min:[310,1,1,""],minute:[311,1,1,""],month:[312,1,1,""],nanosecond:[313,1,1,""],ordinal_day:[314,1,1,""],round:[315,1,1,""],second:[316,1,1,""],strftime:[317,1,1,""],timestamp:[318,1,1,""],to_python_datetime:[319,1,1,""],week:[320,1,1,""],weekday:[321,1,1,""],year:[322,1,1,""]},"polars.eager.series.StringNameSpace":{contains:[323,1,1,""],json_path_match:[324,1,1,""],lengths:[325,1,1,""],lstrip:[326,1,1,""],replace:[327,1,1,""],replace_all:[328,1,1,""],rstrip:[329,1,1,""],slice:[330,1,1,""],strptime:[331,1,1,""],to_lowercase:[332,1,1,""],to_uppercase:[333,1,1,""]},"polars.lazy.expr.ExprDateTimeNameSpace":{day:[344,1,1,""],hour:[345,1,1,""],minute:[346,1,1,""],month:[347,1,1,""],nanosecond:[348,1,1,""],ordinal_day:[349,1,1,""],round:[350,1,1,""],second:[351,1,1,""],strftime:[352,1,1,""],timestamp:[353,1,1,""],to_python_datetime:[354,1,1,""],week:[355,1,1,""],weekday:[356,1,1,""],year:[357,1,1,""]},"polars.lazy.expr.ExprStringNameSpace":{contains:[358,1,1,""],json_path_match:[359,1,1,""],lengths:[360,1,1,""],replace:[361,1,1,""],replace_all:[362,1,1,""],slice:[363,1,1,""],strptime:[364,1,1,""],to_lowercase:[365,1,1,""],to_uppercase:[366,1,1,""]},"polars.lazy.frame.LazyGroupBy":{agg:[367,1,1,""],apply:[368,1,1,""],head:[369,1,1,""],tail:[370,1,1,""]},polars:{"var":[394,3,1,""],DataFrame:[1,0,1,""],Expr:[71,0,1,""],Series:[180,0,1,""],StringCache:[266,0,1,""],all:[267,3,1,""],any:[268,3,1,""],arange:[269,3,1,""],arg_where:[270,3,1,""],argsort_by:[271,3,1,""],avg:[272,3,1,""],col:[273,3,1,""],concat:[274,3,1,""],concat_str:[275,3,1,""],count:[276,3,1,""],cov:[277,3,1,""],first:[334,3,1,""],fold:[335,3,1,""],from_arrow:[336,3,1,""],from_dict:[337,3,1,""],from_pandas:[338,3,1,""],from_records:[339,3,1,""],get_dummies:[340,3,1,""],groups:[341,3,1,""],head:[342,3,1,""],last:[343,3,1,""],lit:[371,3,1,""],lit_date:[372,3,1,""],map_binary:[373,3,1,""],max:[374,3,1,""],mean:[375,3,1,""],median:[376,3,1,""],min:[377,3,1,""],n_unique:[378,3,1,""],pearson_corr:[379,3,1,""],quantile:[380,3,1,""],read_csv:[381,3,1,""],read_ipc:[382,3,1,""],read_json:[383,3,1,""],read_parquet:[384,3,1,""],read_sql:[385,3,1,""],repeat:[386,3,1,""],scan_csv:[387,3,1,""],scan_parquet:[388,3,1,""],std:[389,3,1,""],sum:[390,3,1,""],tail:[391,3,1,""],to_list:[392,3,1,""],toggle_string_cache:[393,3,1,""],when:[395,3,1,""]}},objnames:{"0":["py","class","Python class"],"1":["py","method","Python method"],"2":["py","property","Python property"],"3":["py","function","Python function"]},objtypes:{"0":"py:class","1":"py:method","2":"py:property","3":"py:function"},terms:{"0":[5,7,11,16,17,20,28,31,32,35,46,54,56,93,170,195,203,242,269,294,295,306,311,316,321,331,335,345,346,351,352,356,381,385,387],"000":[313,348],"1":[1,4,5,7,11,12,16,17,19,20,21,22,28,46,49,54,57,59,63,64,68,73,74,86,93,103,108,118,125,146,180,195,203,242,247,251,263,264,269,273,285,297,305,312,313,314,320,324,336,337,338,339,344,347,348,349,355,359,369,370,371,381,395],"10":[21,57,59,221,385],"100":[269,381],"102":5,"11":[19,273],"12":[170,312,347],"13":[12,118,146],"15":[6,118,195,315,350],"16":[118,170,294,295],"19":[331,352],"2":[1,4,5,7,11,12,16,17,19,20,21,22,28,49,54,57,59,63,64,68,73,74,86,93,103,108,118,146,180,195,203,264,273,285,297,324,336,337,338,339,359,369,370,371,385,395],"20":371,"2021":371,"22":273,"23":[306,345],"233":16,"267":5,"2d":63,"3":[1,4,5,7,11,12,16,17,19,20,21,22,28,49,54,57,59,63,64,68,73,74,86,93,103,108,118,146,180,195,203,264,273,285,297,336,337,338,339,369,370,371],"31":[305,344],"33":273,"366":[314,349],"4":[1,5,12,16,19,21,22,28,49,57,59,68,118,146,195,278,285,297,331,336,337,338,339,352,369,370,395],"4142135623730951":195,"5":[1,5,6,12,16,19,21,22,30,49,57,59,68,118,146,195,264,285,297,315,324,336,338,339,350,359,369,370],"500":147,"53":[320,355],"59":[311,316,346,351],"6":[1,4,5,7,11,12,17,19,21,28,54,57,59,63,64,118,146,285,297,321,336,338,339,356,369,370],"64bit":[121,235],"7":[4,7,11,17,21,28,54,57,59,63,64,118],"8":[4,5,7,11,17,21,28,54,57,59,63,64,118,294,295],"8192":381,"9":[16,21,57,59,118],"999":[313,348],"boolean":[15,89,98,99,100,101,102,103,104,105,106,150,186,202,206,207,208,209,211,212,213,214,215,216,218,231,232,244,265,270,323,399],"byte":[381,382,384],"case":264,"class":[1,71,180,266,399],"default":[1,180,251,263,271,336,337,338,339,381],"do":[58,139,260,264,267,292],"export":392,"final":[147,274],"float":[13,39,46,51,88,119,120,124,148,165,169,170,195,196,208,210,212,213,214,222,223,224,225,233,237,238,239,240,241,242,244,245,251,253,263,272,293,371,375,376,380,386,389,394],"function":[0,2,16,38,74,111,118,158,164,182,264,267,278,280,292,335,368,373,381,399],"import":[64,158],"int":[6,20,21,22,24,30,31,32,35,36,43,44,46,48,49,50,51,53,56,57,68,88,93,94,124,125,126,127,133,134,135,147,148,149,153,157,168,169,171,175,183,184,190,195,203,204,220,221,222,223,225,227,228,230,237,238,239,240,241,242,244,245,246,247,249,251,253,254,255,256,263,269,276,285,297,315,330,342,350,363,369,370,371,376,378,381,384,385,386,387,388,391],"long":[12,34,146,162],"new":[7,10,23,24,37,41,42,69,73,87,91,135,182,197,200,236,245,256,265,283,368],"null":[1,5,10,17,28,37,73,86,103,105,106,108,111,145,180,197,201,215,216,230,237,238,239,240,243,260,324,337,339,359,371,381,387],"public":399,"return":[5,7,10,12,13,14,16,23,28,29,62,69,75,87,91,98,99,100,101,102,104,105,106,116,122,134,135,139,147,158,170,182,185,186,188,195,200,207,208,209,211,212,213,214,215,216,218,226,245,256,264,265,269,270,278,280,284,285,289,297,305,306,307,308,309,310,311,312,313,314,316,317,318,320,321,322,323,324,325,330,331,336,337,338,339,344,345,346,347,348,349,351,353,355,356,357,359,363,369,370,381,382,384],"short":381,"throw":[324,359],"true":[1,5,8,17,54,59,65,75,98,101,102,103,104,105,106,121,128,129,139,140,147,155,158,170,180,186,235,237,238,239,240,260,264,265,269,270,274,324,336,337,338,339,359,381,382,384,387,388],"try":[381,387],A:[1,16,102,104,108,140,141,172,180,237,238,239,240,273,323,324,327,328,331,359,371,381,387,397],AND:267,At:65,Be:269,By:[54,251,263,381],For:[54,121,235,335],If:[1,2,64,89,111,128,129,139,155,180,182,237,238,239,240,257,260,267,269,271,337,338,339,381,382,384,385,387],In:[1,128,129,234],It:[158,180,368],No:[13,148],Not:[102,104],OR:268,One:[14,180,294],Or:[14,118,395],The:[2,25,93,95,122,129,154,155,203,205,237,238,239,240,271,305,312,313,314,320,344,347,348,349,355,381,384,397,402],These:397,Will:[180,374,377,390],With:108,__init__:[1,71,180,266],_io:[62,383],acc:335,accept:54,accumul:335,ad:69,add:[70,155,177,179,395],advis:29,after:[381,384,387,388],agg:[74,108,294,295],agg_group:341,agg_list:111,aggreg:[16,31,32,33,35,39,55,56,66,72,89,108,110,118,159,160,161,163,165,173,174,176,237,238,239,240,274,278,279,282,284,286,292,294,295,335,367,374,377,381,390,392,399],alia:[91,272,367],all:[26,27,29,40,71,85,131,158,180,198,207,218,252,273,274,295,324,328,336,338,359,362,381,387,397,399],alloc:[40,245],allow:[29,121,155,158,235,266,387,388],allow_parallel:155,alreadi:[1,139,264,337,338],also:[11,19,30,54,335,382,397],alwai:381,amount:[30,221],an:[13,14,16,43,58,62,71,73,78,80,81,82,85,131,134,155,172,180,192,193,194,198,237,238,239,240,252,260,269,292,336,342,381,387,391,399],ani:[1,2,6,16,38,44,45,64,65,74,78,100,111,164,180,182,237,238,239,240,259,260,283,315,334,337,338,339,350,374,377,384,390],anoth:[129,182,243],anti:180,apach:384,api:[0,278],appl:[4,28],appli:[16,38,111,118,158,164,237,238,239,240,267,278,335,373,399],ar:[2,10,13,16,29,65,98,100,101,102,104,122,128,129,148,180,211,260,264,269,271,275,336,381,384,387,388,393,397,399,402],arg:[38,64,164,182,260],argsort:271,argument:[38,62,64,164,180,381],arithmet:16,arrai:[1,58,63,80,81,82,180,185,188,192,193,194,237,238,239,240,257,260,264,324,336,359,381],arraylik:180,arrow:[58,61,257,336,382,384],articl:[324,359],ascend:271,asof:[28,155],assert:19,attribut:[1,71,180,399],automat:[1,180,385],avail:[147,396,397,401,402],awar:384,axi:[31,32,35,56],b:[1,4,5,7,11,12,16,17,19,21,28,54,57,59,63,64,73,74,103,108,146,195,277,285,297,336,337,338,339,369,370,373,379],b_agg_list:108,backward:[14,201],banana:4,bar22:16,bar:[4,7,11,16,17,21,28,54,57,59,63,64,73,278,395],base:[15,150,292,374,377,390],batch_siz:381,becaus:29,befor:[237,238,239,240],behavior:[74,237,238,239,240,264,374,377,390],being:381,below:[19,395],between:[46,83,96,196,242,277,379],bewar:2,binari:61,binaryio:[61,381,382,384],bit:[121,235],bitwis:[267,268],book:111,bool:[1,8,17,23,46,52,54,59,62,64,65,67,75,80,81,82,103,111,121,128,129,139,140,144,147,155,158,170,172,180,185,188,192,193,194,206,210,217,219,234,235,236,237,238,239,240,242,243,248,250,260,264,269,271,274,336,337,338,339,381,382,384,387,388,393],both:[28,155],bound:[269,381,387],buffer:381,builtin:381,by_column:19,bytesio:[62,381,383],c:[1,4,5,7,11,12,16,17,19,21,28,54,57,59,63,64,65,74,86,146,195,285,297,338,369,370],cach:[139,147,266,387,388,393],calcul:[251,263],calendar:[322,357],call:[29,382,396,401],callabl:[2,16,38,74,111,158,164,182,280,335,368,373],can:[11,16,19,54,71,108,116,121,180,185,188,226,235,264,267,269,273,278,305,306,311,312,313,314,316,320,321,322,344,345,346,347,348,349,351,355,356,357,374,381,385,387,397],cannot:[381,387],capac:[52,248],cast:[16,64,121,180,235,258,275,324,336,359,393],categor:[139,147,266,340,393],categori:[266,393],categoricaltyp:58,caution:139,certain:[24,86,180],chain:395,chang:[108,381],charact:[381,387],cheap:[3,191],check:[17,96,100,206,210,211,217,219,243,323,358],chrono:[317,331,352],chunk:[36,190,227,234,257,381],chunkedarrai:36,clickhous:385,clone:[63,64,259,260,264],closest:336,coerc:122,coercion:[122,139,147],col1:1,col2:1,col:[1,54,73,74,84,103,108,118,267,269,278,294,295,324,339,359,367,395,397],collect:[29,58,74,118,147,269,386],column:[1,6,7,8,9,11,12,19,23,24,28,31,32,33,34,35,37,39,41,42,43,47,48,54,55,56,66,69,70,74,75,86,89,108,118,122,128,129,139,142,143,144,146,147,152,155,159,160,161,162,163,165,167,172,173,174,176,177,178,179,180,267,271,272,273,275,276,277,278,292,294,295,334,335,337,338,339,341,342,343,373,374,375,376,377,378,379,380,381,384,385,387,389,390,391,394,395,399],column_0:339,column_1:339,column_to_agg:278,column_x:381,columnar:45,columnwis:[267,268],combin:[20,278],come:[396,401],comma:59,comment:[381,387],comment_char:[381,387],compar:[17,243],complet:[260,278],compress:65,comput:[80,81,82,83,116,155,192,193,194,196,226,237,238,239,240,277,293,379,399],concat:275,concaten:274,concatten:16,conclus:[1,339],config:399,connect:[381,382,384,385],connection_uri:385,connectorx:385,connextorx:385,consid:[17,111,180,243,278],construct:[1,180,336,337,338,339],constructor:399,contain:[1,105,106,180,227,257,324,337,339,359],context:[71,72,74,89,128,129,266,397],contigu:[40,336,338,381],convers:[260,399],convert:[45,63,64,259,260,340,372],copi:[58,197,257,260,336],core:[1,64,180],correl:379,could:335,count:[37,117,195,228,230,262,291,378,381],covari:277,cpu:381,creat:[37,71,85,98,101,102,104,105,106,131,180,197,198,234,252,269,330,336,363],creation:[1,180,337,339],cross:[28,155],csv:[59,367,381,387,399],cumul:[80,81,82,192,193,194],custom:[2,74,111,158,280,373],d:[21,28,57,59],dai:[6,314,315,321,349,350,356],data:[1,29,40,45,52,58,63,64,78,124,147,180,197,199,241,248,259,260,264,266,336,337,338,339,367,385],data_typ:189,databas:385,datafram:[0,73,74,89,103,108,118,139,142,143,144,145,146,147,150,151,153,155,156,157,158,159,160,161,162,163,165,166,167,171,172,173,174,175,176,177,178,179,180,258,262,269,273,274,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,296,297,298,299,300,301,302,303,304,324,336,337,338,339,340,359,368,369,370,381,382,383,384,385,397,399],dataset:381,datatyp:[1,2,5,11,16,74,111,180,182,189,195,199,217,219,269,331,364,371,373,381,387],date32:[6,305,312,314,317,319,320,321,322,331,344,347,349,352,354,355,356,357,364],date64:[6,93,305,306,311,312,313,314,316,317,319,320,321,322,331,344,345,346,347,348,349,351,352,354,355,356,357,364,371],date:[64,305,307,308,309,310,312,314,320,321,322,344,347,349,355,356,357],date_as_object:64,datetim:[71,85,96,180,198,306,307,308,309,310,311,313,315,316,319,345,346,348,350,351,354,371,372],datetime64:64,datetimeindex:[180,338],datetimenamespac:198,dd:364,ddof:[251,263],debug:147,decim:[124,241],deep:[3,191],defin:371,degre:[251,263],delimit:[59,275,381,387],delta:[251,263],depend:74,deprec:[188,294,295],descend:54,describ:367,describe_optimized_plan:29,describe_plan:29,descript:399,determin:[16,122,271,381],deviat:[55,130,173,251,389],df1:17,df2:[1,17],df3:1,df4:1,df:[1,4,5,7,11,12,16,19,21,22,28,49,54,57,59,63,64,67,68,73,74,103,108,118,146,267,269,273,274,278,285,297,324,336,337,338,339,340,359,369,370,385,397],dict:[1,41,195,278,337,381,382,384,387],dictat:122,dictionari:[1,195,337,381,387],differ:[78,305,314,320,344,349,355,374,377,381,390],digit:[124,241],dimens:[1,337,338,339],dimension:[1,180,337,339],direct:53,directori:384,disk:[65,170],divisor:[251,263],doc:[118,331,352,384],document:[324,359],doe:[1,105,147,180,264,337,339],doesn:264,don:[153,157,264],done:367,dot:170,down:[387,388],downscal:[6,315,350],drop:[8,9,10,144,145,264],dt:[71,180,372,397,402],dtype:[1,64,74,78,87,91,111,122,134,180,200,208,212,213,214,269,331,371,381,387],due:[50,51,125,126,168,169,247],dummi:[60,340],duplic:[8,26,97,144,207,271],dure:[381,387],e:[6,21,57,59,260,315,350,381,382,384],each:[74,190,281,285,297,369,370],eager:[1,2,3,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,30,31,32,33,34,35,37,39,40,41,42,43,46,47,48,50,51,52,53,54,55,56,57,60,66,67,69,70,74,111,134,139,147,158,180,181,182,185,186,187,188,189,191,192,193,194,196,197,198,200,201,202,203,204,205,207,208,209,211,212,213,214,215,216,218,221,226,231,232,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,252,254,255,256,258,261,262,265,269,270,272,274,276,334,335,336,337,339,340,342,343,368,371,373,374,375,376,377,378,381,382,383,384,385,386,389,390,391,394,397,399],effect:16,either:[29,46,242],element:[80,81,82,100,122,182,192,193,194,202,204,211,221,251,254,261,263],elementwis:[237,238,239,240,267,268],empti:[50,51,125,126,168,169,180,247],encod:[60,381],encount:[324,359,381,387],end:[96,273],engin:385,ensur:393,enumer:381,eq:71,equal:[17,155,237,238,239,240,243,269,381,387,393],equival:[332,333],error:[324,359,381,387],etc:[269,339,381,382,384],evalu:[13,14,15,70,100,150,155,177,179,186,265,268,269,270],everi:[80,81,82,87,91,135,147,192,193,194,200,256,381],exact:[52,248],exampl:[1,4,5,7,11,12,16,17,19,21,22,28,49,54,57,59,63,64,68,73,74,103,108,118,146,180,195,267,269,278,285,297,324,336,337,338,339,359,367,369,370,371,385,395],except:[155,260],exclud:273,execut:[29,138],existing_nam:178,expand:[87,91,122,200],expect:74,expens:[368,381,387],explod:91,expon:119,expos:399,expr:[12,13,14,15,28,47,54,69,70,146,148,149,150,152,155,167,169,172,177,179,267,268,269,271,272,273,275,276,277,278,334,335,341,342,343,367,371,372,373,374,375,376,377,378,379,380,389,390,391,392,394,395,397],exprdatetimenamespac:85,express:[0,13,14,15,51,54,70,71,73,78,79,83,86,89,96,98,101,102,103,104,105,106,108,119,126,134,139,147,150,169,172,177,179,269,273,277,324,335,342,359,364,367,372,379,391,395,399],exprstringnamespac:131,extra:[381,382,384],extract:[305,306,311,312,313,314,316,320,321,322,324,344,345,346,347,348,349,351,355,356,357,359],f32:[1,180],f64:[5,7,11,16,28,54],f:[2,74,111,158,280,335,368,373],fail:[8,144,182],fals:[1,5,17,23,46,52,54,62,64,67,75,80,81,82,103,111,121,128,129,139,144,147,155,158,170,172,180,185,188,192,193,194,234,235,236,237,238,239,240,242,243,248,250,260,264,265,269,271,337,339,381,384,387],feather:[61,382,399],featur:[65,266],fetch:[29,153,157],field:59,figsiz:170,figur:170,file:[59,61,62,65,147,381,382,383,384,387,388],fill:[13,14,50,51,77,88,92,125,126,148,149,168,169,201,237,238,239,240,247],fill_non:[13,148],fill_valu:[13,51,88,126,148,149,169],filter:[84,147,244,269],find:271,finish:[139,266],finit:[98,208],first:[21,30,76,94,99,153,157,180,195,204,209,271,285,324,327,342,359,361,369,381],fit:[52,248],float32:[1,16,180],float64:[11,16],fmt:[317,331,352,364],fn:335,follow:[74,264,385,397,402],foo11:16,foo:[4,7,11,16,17,21,22,28,49,54,57,59,63,64,68,73,84,269,273,278,341,371,380,395],forc:155,force_parallel:155,form:[1,180],format:[12,34,65,146,162,317,331,352,382,383],forward:[14,201],found:11,frac:[46,242],fraction:[46,242],frame:[1,3,5,6,7,8,10,12,13,14,15,17,19,21,23,25,28,29,30,31,32,33,34,35,37,39,40,41,46,47,50,51,52,53,54,55,56,57,60,64,66,67,69,70,138,139,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,171,172,173,174,175,176,177,178,179,258,262,274,336,337,339,340,381,382,383,384,385,387,388],frame_equ:19,freedom:[251,263],from:[1,7,8,29,41,46,47,75,86,128,129,142,143,144,145,147,167,197,221,242,265,305,306,311,312,313,314,316,319,320,321,322,336,337,338,339,344,345,346,347,348,349,351,354,355,356,357,381,382,383,384,385,387,388],from_panda:385,fsspec:[381,382,384],func:[38,164,182],g:[6,260,315,350,381,382,384],gbselect:[294,295],gener:[384,385],get:[1,4,11,18,21,22,26,27,30,36,44,49,57,60,68,72,75,76,80,81,82,90,97,99,107,109,112,113,114,115,120,130,132,136,137,151,153,156,175,180,183,184,186,187,190,192,193,194,199,204,207,208,209,212,213,214,215,216,218,222,224,225,227,229,231,232,233,249,251,254,257,261,263,264,270,299,300,301,302,303,304,325,334,342,343,360,374,375,376,377,389,390,391,394],github:111,give:[122,399],given:[2,50,51,122,125,126,168,169,182,237,238,239,240,247,267,381],global:[139,147,393],go:[319,354],goessner:[324,359],graph:29,graphiz:29,graphviz:170,group:[19,72,74,118,128,129,152,279,280,281,282,283,285,286,287,288,289,290,291,292,293,296,297,298,299,300,301,302,303,304,367,368,369,370],group_valu:283,groupbi:[6,74,108,118,128,129,367,369,370,399],grow:67,grown:23,gt:71,gt_eq:71,guarante:[147,381,387],ha:[74,210,387],ham:[4,7,11,17,21,28,54,57,59,63,64,273,278],hamburg:273,handler:381,has_head:[59,381,387],hash:20,have:[40,139,170,381,393],head:30,header:[11,59,381,387],height:1,help:[147,397],high:269,hit:138,hold:[52,248,273],horizont:[16,23,335,374,377,390],host:[381,382,384],hot:60,hour:[6,315,350],how:[28,122,155,385],how_can_i:111,html:[111,118,331,352,384],http:[111,118,324,331,352,359,384],i32:118,i64:[1,4,7,11,12,19,21,28,54,57,73,74,86,108,146,180,273,285,297,336,337,338,339,369,370],id_var:[34,162],identifi:[34,162],idiomat:278,idx:[48,245],ignor:[62,237,238,239,240],ignore_error:[381,387],ignore_nul:[237,238,239,240,264],implement:65,in_plac:[23,52,54,67,234,236,248,250],includ:[59,264],increas:384,index:[24,43,44,48,53,72,75,76,127,134,171,180,183,184,185,186,187,188,245,249,255,270,271,284,330,331,352,363,381],indic:[255,340,381,387],individu:[74,190],infer:[1,2,180,339,381,387],infer_schema_length:381,infinit:[101,212],influenc:147,initi:[1,335],inner:[28,83,155,180,196],input:[0,373,374,377,390,399],insert:[24,42],instal:[64,170,338,381,382,384,385],instanc:[16,335,381,387],instead:[1,62,269,294,295,384],int32:[269,322,357],int64:[1,11,16,121,180,235,269,318,353],int8:16,integ:[121,235,245,371],intermedi:[25,95,154,205],interpret:[1,180,339,381,387],invalid:[264,324,359],io:111,ipc:[61,382,399],is_not:214,is_not_nul:[84,267],isn:395,iso:[320,355],item:[87,91,200],join:[118,139,147],json:[62,324,359,383,399],json_path:[324,359],json_val:[324,359],jsonpath:[324,359],k0:[20,93,203],k1:[20,93,203],k2:[20,93,203],k3:[20,93,203],keep:[108,381,387],kei:[6,41,155,284,292],keyword:[38,164,180],know:[260,264],kwarg:[38,64,65,164,260,384],label:[1,337,338,339],lambda:[2,16,74,111,158,182],larg:[75,128,129],largelist:12,last:[57,133,175,254,297,305,314,320,344,349,355,370,391],latest:92,lazi:[12,13,14,15,28,47,54,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,171,172,173,174,175,176,177,178,179,267,268,269,271,272,273,275,276,277,278,334,335,341,342,343,371,372,373,374,375,376,377,378,379,380,387,388,389,390,391,392,394,395],lazili:[387,388],lazyfram:[0,28,29,89,367,368,369,370,387,388,399],lazygroupbi:152,ldf:155,lead:[134,237,238,239,240,264,326,374,377,390],leap:[313,348],left:[28,155,335],left_on:[28,155],len:[46,242],length:[21,30,53,57,127,171,190,204,220,237,238,239,240,249,254,330,363],letter:[12,146,285,297,369,370],level:[16,89,387,388],lf:395,lib:[58,180,257,336],like:[28,147,381,382,383,384],line:[381,387],linear:[25,95,154,205,275],lineitem:385,list:[1,4,6,7,8,10,11,12,18,19,23,28,34,45,54,70,86,87,91,100,108,118,122,134,143,144,145,146,152,155,162,172,179,190,200,211,237,238,239,240,255,259,267,268,271,274,275,278,284,294,335,367,374,377,381,384,385,387,390,392],lit:[335,395],liter:[371,372],load:385,local:[231,232],locat:[43,48,185,188,245,255],logic:155,loop:19,lossi:381,low:269,low_memori:[381,387],lower:[121,147,235,269],lowercas:[332,365],lt:71,lt_eq:71,mai:[1,50,51,125,126,168,169,247,330,335,336,363,381],maintain_ord:[8,144],make:[40,122,336,338,381,382,384,385],manag:266,mani:385,manipul:399,manual:385,map:[41,278,373,381,384,387],mask:[26,27,97,99,107,202,207,208,209,212,213,214,215,216,218,231,232,244,265,270,323],match:[1,155,324,327,328,337,338,339,359,361,362],materi:368,matlotlib:170,max:[5,14,80,192,195,201,237,278,367],maxim:[287,300],maxima:183,maximum:[31,112,159,222,231,307,374,381],mean:[5,14,87,91,195,200,201,238,272],median:5,memori:[52,234,248,264,381,384,387,388],memory_map:384,method:[1,25,65,71,85,95,131,154,180,182,198,205,252,266,381,397,399,402],min:[5,14,81,193,195,201,239,278],min_period:[237,238,239,240],minim:[184,225,290,303],minimum:[16,35,115,163,232,310,377],minut:[6,315,350],miss:[13,14,77,92,111,148,149,180,264],mix:195,mm:364,modifi:[23,67,236,332,333,381],moment:[5,65],mondai:[321,356],month:[6,305,315,344,350],more:[29,65,111,331,384],most:[116,226,336],mostli:58,move:[237,238,239,240],ms:[318,353],multi:[381,387],multipl:[23,54,70,116,143,172,179,226,271,278,294,335,367,395],multipli:[237,238,239,240],must:[1,111,155,180,337,338,339],mysql:385,n:[6,21,30,46,57,94,122,133,135,153,157,175,204,221,242,251,254,256,263,285,297,315,342,350,369,370,381,384,386,387,388,391],n_row:147,n_thread:381,n_uniqu:[278,367],name:[1,4,7,9,28,41,69,73,108,142,143,172,180,236,267,268,273,277,278,338,339,342,367,379,381,386,387,391,392,399],namespac:[71,85,131,180,198,252,396,399,401],nan:[13,102,104,148,180,213,214],nativ:[381,382,384],ndarrai:[1,63,180,245,255,260,264,339],nearest:155,need:[52,139,147,248,367],neg:[50,51,125,126,168,169,247,330,363],negat:[103,214],neq:71,net:[324,359],new_col:42,new_column:381,new_fil:59,new_nam:178,new_valu:335,next:77,no_optim:[139,147,158],node:[138,158],non:[5,215,237,238,239,240,260,275,313,348],none:[1,2,8,10,13,14,24,28,42,43,46,50,51,59,61,62,65,71,73,74,88,94,103,108,111,125,126,133,144,145,155,168,169,170,180,181,182,204,237,238,239,240,242,247,254,264,266,267,269,324,330,331,337,338,339,342,359,363,364,371,373,381,382,384,385,386,387,388,391,393],note:[8,13,144,147,148,153,157,170,180,381],noth:[324,359],notic:[1,180],np:1,nr:[12,146,285,297,369,370],ns:64,nth:[135,256],null_equ:[17,243],null_valu:[381,387],nullabl:[1,180,264,337,339],num_el:221,number:[6,13,29,36,46,50,51,79,102,104,122,124,125,126,147,148,153,157,168,169,175,210,227,228,237,238,239,240,241,242,247,251,263,276,281,285,297,306,311,312,313,315,316,320,321,322,342,345,346,347,348,350,351,355,356,357,369,370,381,386,391],numer:[5,122,217],numpi:[1,63,180,245,255,260,264,339],numpy_arrai:63,object:[29,64,71,85,131,180,198,252,319,354,381,382,383,384,399],occur:[116,226],off:[139,147,158,393],offset:[53,127,171,249],often:[108,122],old:41,onc:[138,381],one:[14,60,155,181,201],onli:[5,54,65,72,121,235,257,384],op:122,open:[381,382,384],oper:[2,6,16,19,24,29,40,50,51,54,58,63,64,72,80,81,82,121,125,126,147,152,153,155,157,168,169,192,193,194,235,247,257,259,260,264,267,268,278,292,315,336,350],optim:[29,40,139,140,147,158,170,387,388],option:[1,2,8,10,23,28,46,52,54,59,62,67,74,94,111,133,144,145,155,170,180,182,183,184,196,204,234,236,237,238,239,240,242,248,250,254,259,267,269,330,331,337,339,342,363,364,371,373,381,382,384,385,386,387,388,391],orang:4,order:[1,75,128,129,172,271],ordin:[314,349],org:[118,384],orient:[1,339],origin:[108,324,359,381],other:[1,17,83,100,111,180,181,196,211,243,265],other_df:28,otherwis:[182,395],out:75,outer:[28,155],output:[0,2,59,73,74,78,111,182,373,399],output_path:170,over:[2,19,53,74,111,182,237,238,239,240,280,335,368,373,381],overhead:[387,388],overrid:[1,337,338],overview:399,overwrit:[70,147,177,179,381,387],pa:336,packag:338,page:399,pair:41,panda:[1,64,180,338,385],pandas_df:64,parallel:[29,155,385],parallelli:385,paramet:[1,2,6,7,9,12,13,14,15,16,17,19,20,21,23,24,28,30,34,38,41,42,43,44,46,47,48,50,51,53,54,57,59,61,62,64,65,67,69,70,73,74,75,78,80,81,82,83,86,89,93,100,111,118,121,122,124,125,126,127,128,129,134,139,142,143,147,148,149,150,152,153,155,157,158,162,164,167,168,169,170,171,172,175,177,179,180,181,182,192,193,194,196,201,202,203,204,221,234,235,236,241,242,243,244,245,247,249,250,251,254,255,260,263,265,267,269,270,271,273,274,275,277,278,280,283,285,292,294,297,315,323,324,327,328,330,331,335,336,337,338,339,340,342,350,358,359,361,362,363,364,367,368,369,370,371,372,373,374,379,381,382,383,384,385,386,387,388,391],parent:16,parquet:[65,384,388,399],pars:[180,331,364,381,387],parser:381,part:[50,51,125,126,168,169,247,336],particular:[381,382,384],partit:[384,385],partition_col:385,partition_num:385,partition_on:385,partition_rang:385,pass:[2,65,158,170],password:[381,382,384,385],past:158,path:[59,61,62,65,324,359,381,382,383,384,387,388],pathlib:[59,61,62,65,381,382,384,387,388],pattern:[180,323,327,328,358,361,362],pd:[338,385],pd_df:338,pd_seri:338,peak:[231,232],pearson:379,per:[37,289,291,293,298,299,300,301,302,303,304,381,387],perform:[40,54,155,305,306,311,312,313,314,316,320,321,322,344,345,346,347,348,349,351,355,356,357,381,384,387],period:[50,51,125,126,168,169,247],physic:[138,155,381],piec:264,pivot:399,pivot_column:292,pivotop:292,pl:[1,4,5,7,11,12,16,17,19,21,22,28,49,54,57,59,63,64,68,73,74,103,108,121,146,180,195,235,264,267,269,273,278,285,297,324,336,337,338,339,359,367,369,370,385,392],place:[9,23,24,50,51,54,67,125,126,168,169,234,236,247,250],plan:[29,138,140,141,155,170],plot:170,point:[13,29,124,148,158,210,241],polar:399,port:[381,382,384,385],posit:180,position:180,possibl:[180,381],postgr:[118,385],postgresql:[118,385],potenti:[387,388],power:119,predic:[15,89,139,147,150,158,202,387,388],predicate_pushdown:[139,140,147,158],predict:40,presenc:260,present:[1,337,338],pretti:62,primit:[100,260],print:[11,19,29],produc:[111,373],product:[83,196],project:[74,128,129,139,147,158,381,384,387,388],projection_pushdown:[139,140,147,158],properti:[4,11,22,49,68,85,131,198,199,229,246,252],protocol:385,provid:[324,359,381,385,387],push:[387,388],pushdown:[139,147,158],pyarrow:[58,64,65,180,257,260,336,381,382,384],python:[45,74,111,259,307,308,309,310,319,354,372,384],queri:[29,139,140,141,147,170,324,359,385,387,388],quick:195,quit:368,rais:[119,260],rang:[269,305,312,313,314,320,344,347,348,349,355,385],rather:155,raw:385,raw_output:170,re:392,read:[111,147,331,381,382,383,384,385,387,388],read_tabl:384,reader:[382,384],rechunk:[274,336,338,381],recommend:[278,368],redshift:385,reduc:[223,253,287,288,290,296,381,387,388],reduct:16,refer:[0,69,381],regard:[237,238,239,240,381],regardless:[324,359],regex:[273,323,327,328,358,361,362],regular:273,relat:[71,85,131,180,198,252],remain:381,remot:[381,382,384],remov:[7,142,143,326,329],renam:[73,178,381,397],repeat:122,replac:[13,14,43,46,69,148,242,244,245,328,362],repres:[1,180,245,251,263,313,336,337,338,339,348],represent:[62,140,141,305,306,311,312,313,314,316,320,321,322,344,345,346,347,348,349,351,355,356,357],request:29,requir:[64,260,338],reset:139,result:[1,51,126,138,169,237,238,239,240,278,337,338,339,373,385,387,388],resultingparamet:[237,238,239,240],return_dtyp:[2,74,111,182,373],revers:[54,75,80,81,82,128,129,172,185,188,192,193,194,250,271],right:[28,100,155,211,381],right_on:[28,155],ritchie46:111,roll:[237,238,239,240],root:108,row:[1,2,8,15,16,20,21,26,27,29,30,53,57,87,91,144,145,147,150,151,153,156,157,175,200,285,297,335,339,342,369,370,381,384,387,388,391],rs:[331,352],rule:[6,16,315,317,350,352],run:[29,139,147],rust:[65,382,384],s1:16,s2:[16,180],s3:180,s:[7,19,28,86,116,118,152,180,226,367,374,377,379,381,390],safe:[121,235,260],same:[87,91,180,182,200,237,238,239,240,265,266],scan:[147,153,157,384,387,388],scan_csv:367,scenario:180,schema:381,second:[6,271,313,315,348,350],see:[30,317,352],seed:[20,93,203],seen:[77,92],select:[48,73,74,86,103,118,123,128,129,255,267,269,273,283,285,295,297,324,359,369,370,381,384,385,399],self:[38,46,118,164,242,265],sens:[381,382,384],sent:[64,260],sep:[59,381,387],separ:[59,275,381,387],sequenc:[1,47,167,180,274,337,338,339],seri:[0,1,2,9,15,16,18,20,23,24,26,27,42,43,48,69,74,75,87,91,93,99,100,111,122,127,134,135,150,269,270,272,275,276,279,334,335,336,338,342,343,359,363,371,373,374,375,376,377,378,386,389,390,391,394,399],serial:62,series_num:195,series_str:195,server:385,set:[1,4,46,139,155,180,182,237,238,239,240,242,245,337,339,381],shape:[1,4,5,7,11,12,19,21,28,54,57,73,74,86,103,108,146,180,273,285,297,324,336,337,338,339,359,369,370],share:266,shift:[51,126,169],should:[6,59,61,65,72,89,142,155,170,182,237,238,239,240,371],show:[29,37,170],show_graph:29,shrink:[52,248],sign:[121,235],similar:[16,118,155],simplifi:[139,147],simplify_express:[139,140,147],sinc:[294,295,313,348],singl:[89,111,172,180,234,257,273,274,283,367,373,381,385,386],size:[237,238,239,240,269],skip_row:[381,387],slice:[237,238,239,240],slow:2,small:[29,75,128,129],smaller:147,snappi:65,so:271,some:[381,387],sometim:397,sort:[19,75,108,129,155,185,188,264,271,285,297,369,370],sourc:[147,266,383,384,385],spam:278,specif:180,specifi:[1,180,337,338,339],speed:[1,180,337,339],split:278,sql:[28,385,399],sqlite:385,stabl:384,stack:[23,67],standard:[55,130,173,251,324,359,389],start:[6,19,29,96,127,152,171,273,305,312,314,320,330,335,344,347,349,355,363,381,387,395],stat:399,statist:[5,195],std:[5,195],step:269,stop:[381,384,387,388],stop_after_n_row:[381,384,387,388],storag:[381,382,384],storage_opt:[381,382,384],store:111,str:[1,4,5,6,7,8,9,10,11,12,14,19,21,28,34,41,42,47,51,54,57,59,61,62,65,71,73,74,86,88,103,108,118,129,140,141,142,143,144,145,146,148,149,152,155,162,167,169,170,172,178,180,195,201,229,236,267,268,272,273,275,276,277,278,285,292,294,297,315,317,323,324,327,328,331,334,337,338,339,341,342,343,350,352,358,359,361,362,364,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,397,402],strategi:[14,28,201,381],stream:[61,382],strftime:331,string:[16,54,62,71,131,139,140,141,147,180,252,266,273,275,323,324,325,327,328,330,332,333,358,359,360,361,362,363,381,387,393,399],string_cach:[139,147],stringio:381,stringnamespac:252,strptime:[317,352],structur:1,sub:280,sub_df:19,subgroup:118,subsequ:40,subset:[8,10,144,145],subslic:[330,363],substr:[327,328,362],sugar:[84,341,380],sum:[16,19,74,82,118,194,195,237,238,239,240,264,267,278,335,377],summar:5,summari:[5,195],sundai:[321,356],supercast:16,support:[65,180,336,385],sure:[40,269,336,338,381,385],symbol:59,syntact:[84,341,380],syntax:[54,170,180,278,331],system:381,t:[153,157,264,395],tabl:[1,58,64,336],tail:278,take:[16,30,94,133,135,221,256,265,342,391],taken:134,temporarili:266,textio:[59,381],than:[155,381],thei:29,thens:395,therebi:[387,388],thi:[1,2,6,8,16,20,24,26,27,29,31,32,33,35,36,39,40,46,47,50,51,52,53,55,56,58,59,62,63,64,66,67,75,79,87,91,96,100,111,118,121,122,125,126,128,129,138,139,144,145,147,155,158,167,168,169,180,181,182,185,188,197,199,200,206,210,211,217,219,220,221,222,223,224,225,227,228,229,230,233,234,235,236,237,238,239,240,242,246,247,248,249,250,251,253,257,258,259,260,263,264,266,267,269,276,278,335,336,339,368,381,382,384,387,388,393,396,399,401],thing:267,thread:[381,385,387],through:[180,385],time:[122,275,386],timeseri:399,to_str:62,toggl:[237,238,239,240,393],tp:[374,377,390],trail:329,transform:[365,366],travers:[237,238,239,240],tri:2,tupl:[2,44,45,49,170,246,278,283,385],turn:[139,147,158,393],tutori:118,two:[1,16,83,196,267,277,337,339,373,379,385],type:[2,8,11,12,16,58,63,64,74,75,78,93,100,111,122,139,144,147,180,182,189,199,203,260,265,269,318,330,336,353,363,364,371,373,381,387,393],type_coercion:[139,140,147],u32:325,udf:[111,158,373],uint32:[75,122,134,186,269,270,305,306,311,312,313,314,316,320,321,344,345,346,347,348,349,351,355,356,360],uint64:[20,121,203,235],un:29,undefin:264,under:[397,402],underli:[58,121,124,235,241,257,260,305,306,311,312,313,314,316,320,321,322,344,345,346,347,348,349,351,355,356,357,384],union:[1,6,7,8,12,14,19,23,28,34,47,51,54,59,61,62,65,69,70,74,86,88,96,100,111,118,129,134,144,145,146,148,149,152,155,158,162,167,169,172,179,180,195,222,223,225,244,245,253,255,267,268,269,271,272,276,277,278,283,294,307,308,309,310,334,335,336,338,339,342,343,364,367,371,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,394],uniqu:[27,76,99,107,117,187,195,209,218,228,262,291,378],unique_nam:367,unit:[6,315,350],unless:264,unoptim:[29,141],unpivot:[34,162],unsign:[121,235],until:[29,266],up:[1,155,180,337,339],upper:[269,381,387],uppercas:[333,366],uri:385,us:[1,6,13,16,34,36,54,65,71,72,89,111,121,128,129,139,147,148,153,157,162,180,182,185,188,235,251,255,260,263,264,269,271,273,275,278,294,295,330,337,338,339,363,368,371,374,377,381,382,384,385,390,397],usag:[52,248,381,387],use_custom_funct:111,use_pyarrow:[65,381,382,384],usernam:[381,382,384,385],utf8:[11,16,87,91,200,219,275,317,324,330,331,359,363,364,381],util:147,val:386,valid:[269,323,324,327,328,359,384],valu:[1,10,13,14,17,20,25,31,32,33,34,35,39,41,50,51,55,56,59,66,74,75,76,77,79,88,90,92,93,94,95,97,98,99,100,101,102,104,105,106,107,109,111,112,113,114,115,116,117,118,120,122,125,126,132,133,134,135,136,145,148,149,154,159,160,161,162,163,165,168,169,173,174,176,180,183,184,186,195,197,201,203,205,207,208,209,211,212,213,214,215,216,218,222,223,225,226,228,230,233,237,238,239,240,243,244,245,247,253,255,256,262,264,265,270,275,276,281,282,285,286,287,288,290,291,292,297,298,299,300,301,302,303,305,312,314,320,324,325,327,328,330,334,335,337,339,343,344,347,349,355,359,361,362,363,367,369,370,371,374,375,376,377,378,381,385,386,387,390,393,395],value_var:[34,162],values_column:292,variabl:[34,60,162,340],varianc:[66,137,176,263,394],variant:[185,188,365,366],variou:[1,71,180,399],vector:[237,238,239,240],veri:3,version:[294,295],vertic:[67,374],via:381,view:260,vs:65,want:[89,111,139,147,153,157,260],warn:[13,148],we:[19,54,108,155,381,395],week:[6,315,321,350,356],weight:[237,238,239,240],what:[260,264],when:[11,16,139,180,335,384,393],whenthen:395,where:[10,69,98,101,102,104,105,106,186,251,263,265,270,321,356,385,395],whether:[1,59,172,339],which:[54,59,61,65],whitespac:[326,329],whole:[128,129,313,348],width:[1,381],wildcard:[86,267,273,335,397],window:[118,237,238,239,240,399],window_s:[237,238,239,240],wise:335,with_column:[269,395],with_replac:[46,242],without:197,would:[75,260,271],write:[59,61,62,65,170],write_t:65,written:[59,61,65],www:118,x:[28,74,381],y:28,year:[314,320,349,355],yield:[1,339,381,387],you:[89,111,121,139,147,153,157,170,180,235,260,264,269,368,381,387],your:[1,180,337,339,381],yyyi:364,z:28,zero:[14,58,201,257,260,336,381],zero_copy_onli:260,zip_with:16},titles:["&lt;no title&gt;","polars.DataFrame","polars.DataFrame.apply","polars.DataFrame.clone","polars.DataFrame.columns","polars.DataFrame.describe","polars.DataFrame.downsample","polars.DataFrame.drop","polars.DataFrame.drop_duplicates","polars.DataFrame.drop_in_place","polars.DataFrame.drop_nulls","polars.DataFrame.dtypes","polars.DataFrame.explode","polars.DataFrame.fill_nan","polars.DataFrame.fill_none","polars.DataFrame.filter","polars.DataFrame.fold","polars.DataFrame.frame_equal","polars.DataFrame.get_columns","polars.DataFrame.groupby","polars.DataFrame.hash_rows","polars.DataFrame.head","polars.DataFrame.height","polars.DataFrame.hstack","polars.DataFrame.insert_at_idx","polars.DataFrame.interpolate","polars.DataFrame.is_duplicated","polars.DataFrame.is_unique","polars.DataFrame.join","polars.DataFrame.lazy","polars.DataFrame.limit","polars.DataFrame.max","polars.DataFrame.mean","polars.DataFrame.median","polars.DataFrame.melt","polars.DataFrame.min","polars.DataFrame.n_chunks","polars.DataFrame.null_count","polars.DataFrame.pipe","polars.DataFrame.quantile","polars.DataFrame.rechunk","polars.DataFrame.rename","polars.DataFrame.replace","polars.DataFrame.replace_at_idx","polars.DataFrame.row","polars.DataFrame.rows","polars.DataFrame.sample","polars.DataFrame.select","polars.DataFrame.select_at_idx","polars.DataFrame.shape","polars.DataFrame.shift","polars.DataFrame.shift_and_fill","polars.DataFrame.shrink_to_fit","polars.DataFrame.slice","polars.DataFrame.sort","polars.DataFrame.std","polars.DataFrame.sum","polars.DataFrame.tail","polars.DataFrame.to_arrow","polars.DataFrame.to_csv","polars.DataFrame.to_dummies","polars.DataFrame.to_ipc","polars.DataFrame.to_json","polars.DataFrame.to_numpy","polars.DataFrame.to_pandas","polars.DataFrame.to_parquet","polars.DataFrame.var","polars.DataFrame.vstack","polars.DataFrame.width","polars.DataFrame.with_column","polars.DataFrame.with_columns","polars.Expr","polars.Expr.agg_groups","polars.Expr.alias","polars.Expr.apply","polars.Expr.arg_sort","polars.Expr.arg_unique","polars.Expr.backward_fill","polars.Expr.cast","polars.Expr.count","polars.Expr.cum_max","polars.Expr.cum_min","polars.Expr.cum_sum","polars.Expr.dot","polars.Expr.drop_nulls","polars.Expr.dt","polars.Expr.exclude","polars.Expr.explode","polars.Expr.fill_none","polars.Expr.filter","polars.Expr.first","polars.Expr.flatten","polars.Expr.forward_fill","polars.Expr.hash","polars.Expr.head","polars.Expr.interpolate","polars.Expr.is_between","polars.Expr.is_duplicated","polars.Expr.is_finite","polars.Expr.is_first","polars.Expr.is_in","polars.Expr.is_infinite","polars.Expr.is_nan","polars.Expr.is_not","polars.Expr.is_not_nan","polars.Expr.is_not_null","polars.Expr.is_null","polars.Expr.is_unique","polars.Expr.keep_name","polars.Expr.last","polars.Expr.list","polars.Expr.map","polars.Expr.max","polars.Expr.mean","polars.Expr.median","polars.Expr.min","polars.Expr.mode","polars.Expr.n_unique","polars.Expr.over","polars.Expr.pow","polars.Expr.quantile","polars.Expr.reinterpret","polars.Expr.repeat_by","polars.Expr.reverse","polars.Expr.round","polars.Expr.shift","polars.Expr.shift_and_fill","polars.Expr.slice","polars.Expr.sort","polars.Expr.sort_by","polars.Expr.std","polars.Expr.str","polars.Expr.sum","polars.Expr.tail","polars.Expr.take","polars.Expr.take_every","polars.Expr.unique","polars.Expr.var","polars.LazyFrame.cache","polars.LazyFrame.collect","polars.LazyFrame.describe_optimized_plan","polars.LazyFrame.describe_plan","polars.LazyFrame.drop_column","polars.LazyFrame.drop_columns","polars.LazyFrame.drop_duplicates","polars.LazyFrame.drop_nulls","polars.LazyFrame.explode","polars.LazyFrame.fetch","polars.LazyFrame.fill_nan","polars.LazyFrame.fill_none","polars.LazyFrame.filter","polars.LazyFrame.first","polars.LazyFrame.groupby","polars.LazyFrame.head","polars.LazyFrame.interpolate","polars.LazyFrame.join","polars.LazyFrame.last","polars.LazyFrame.limit","polars.LazyFrame.map","polars.LazyFrame.max","polars.LazyFrame.mean","polars.LazyFrame.median","polars.LazyFrame.melt","polars.LazyFrame.min","polars.LazyFrame.pipe","polars.LazyFrame.quantile","polars.LazyFrame.reverse","polars.LazyFrame.select","polars.LazyFrame.shift","polars.LazyFrame.shift_and_fill","polars.LazyFrame.show_graph","polars.LazyFrame.slice","polars.LazyFrame.sort","polars.LazyFrame.std","polars.LazyFrame.sum","polars.LazyFrame.tail","polars.LazyFrame.var","polars.LazyFrame.with_column","polars.LazyFrame.with_column_renamed","polars.LazyFrame.with_columns","polars.Series","polars.Series.append","polars.Series.apply","polars.Series.arg_max","polars.Series.arg_min","polars.Series.arg_sort","polars.Series.arg_true","polars.Series.arg_unique","polars.Series.argsort","polars.Series.cast","polars.Series.chunk_lengths","polars.Series.clone","polars.Series.cum_max","polars.Series.cum_min","polars.Series.cum_sum","polars.Series.describe","polars.Series.dot","polars.Series.drop_nulls","polars.Series.dt","polars.Series.dtype","polars.Series.explode","polars.Series.fill_none","polars.Series.filter","polars.Series.hash","polars.Series.head","polars.Series.interpolate","polars.Series.is_boolean","polars.Series.is_duplicated","polars.Series.is_finite","polars.Series.is_first","polars.Series.is_float","polars.Series.is_in","polars.Series.is_infinite","polars.Series.is_nan","polars.Series.is_not_nan","polars.Series.is_not_null","polars.Series.is_null","polars.Series.is_numeric","polars.Series.is_unique","polars.Series.is_utf8","polars.Series.len","polars.Series.limit","polars.Series.max","polars.Series.mean","polars.Series.median","polars.Series.min","polars.Series.mode","polars.Series.n_chunks","polars.Series.n_unique","polars.Series.name","polars.Series.null_count","polars.Series.peak_max","polars.Series.peak_min","polars.Series.quantile","polars.Series.rechunk","polars.Series.reinterpret","polars.Series.rename","polars.Series.rolling_max","polars.Series.rolling_mean","polars.Series.rolling_min","polars.Series.rolling_sum","polars.Series.round","polars.Series.sample","polars.Series.series_equal","polars.Series.set","polars.Series.set_at_idx","polars.Series.shape","polars.Series.shift","polars.Series.shrink_to_fit","polars.Series.slice","polars.Series.sort","polars.Series.std","polars.Series.str","polars.Series.sum","polars.Series.tail","polars.Series.take","polars.Series.take_every","polars.Series.to_arrow","polars.Series.to_frame","polars.Series.to_list","polars.Series.to_numpy","polars.Series.unique","polars.Series.value_counts","polars.Series.var","polars.Series.view","polars.Series.zip_with","polars.StringCache","polars.all","polars.any","polars.arange","polars.arg_where","polars.argsort_by","polars.avg","polars.col","polars.concat","polars.concat_str","polars.count","polars.cov","polars.eager.frame.GroupBy.agg","polars.eager.frame.GroupBy.agg_list","polars.eager.frame.GroupBy.apply","polars.eager.frame.GroupBy.count","polars.eager.frame.GroupBy.first","polars.eager.frame.GroupBy.get_group","polars.eager.frame.GroupBy.groups","polars.eager.frame.GroupBy.head","polars.eager.frame.GroupBy.last","polars.eager.frame.GroupBy.max","polars.eager.frame.GroupBy.mean","polars.eager.frame.GroupBy.median","polars.eager.frame.GroupBy.min","polars.eager.frame.GroupBy.n_unique","polars.eager.frame.GroupBy.pivot","polars.eager.frame.GroupBy.quantile","polars.eager.frame.GroupBy.select","polars.eager.frame.GroupBy.select_all","polars.eager.frame.GroupBy.sum","polars.eager.frame.GroupBy.tail","polars.eager.frame.PivotOps.count","polars.eager.frame.PivotOps.first","polars.eager.frame.PivotOps.max","polars.eager.frame.PivotOps.mean","polars.eager.frame.PivotOps.median","polars.eager.frame.PivotOps.min","polars.eager.frame.PivotOps.sum","polars.eager.series.DateTimeNameSpace.day","polars.eager.series.DateTimeNameSpace.hour","polars.eager.series.DateTimeNameSpace.max","polars.eager.series.DateTimeNameSpace.mean","polars.eager.series.DateTimeNameSpace.median","polars.eager.series.DateTimeNameSpace.min","polars.eager.series.DateTimeNameSpace.minute","polars.eager.series.DateTimeNameSpace.month","polars.eager.series.DateTimeNameSpace.nanosecond","polars.eager.series.DateTimeNameSpace.ordinal_day","polars.eager.series.DateTimeNameSpace.round","polars.eager.series.DateTimeNameSpace.second","polars.eager.series.DateTimeNameSpace.strftime","polars.eager.series.DateTimeNameSpace.timestamp","polars.eager.series.DateTimeNameSpace.to_python_datetime","polars.eager.series.DateTimeNameSpace.week","polars.eager.series.DateTimeNameSpace.weekday","polars.eager.series.DateTimeNameSpace.year","polars.eager.series.StringNameSpace.contains","polars.eager.series.StringNameSpace.json_path_match","polars.eager.series.StringNameSpace.lengths","polars.eager.series.StringNameSpace.lstrip","polars.eager.series.StringNameSpace.replace","polars.eager.series.StringNameSpace.replace_all","polars.eager.series.StringNameSpace.rstrip","polars.eager.series.StringNameSpace.slice","polars.eager.series.StringNameSpace.strptime","polars.eager.series.StringNameSpace.to_lowercase","polars.eager.series.StringNameSpace.to_uppercase","polars.first","polars.fold","polars.from_arrow","polars.from_dict","polars.from_pandas","polars.from_records","polars.get_dummies","polars.groups","polars.head","polars.last","polars.lazy.expr.ExprDateTimeNameSpace.day","polars.lazy.expr.ExprDateTimeNameSpace.hour","polars.lazy.expr.ExprDateTimeNameSpace.minute","polars.lazy.expr.ExprDateTimeNameSpace.month","polars.lazy.expr.ExprDateTimeNameSpace.nanosecond","polars.lazy.expr.ExprDateTimeNameSpace.ordinal_day","polars.lazy.expr.ExprDateTimeNameSpace.round","polars.lazy.expr.ExprDateTimeNameSpace.second","polars.lazy.expr.ExprDateTimeNameSpace.strftime","polars.lazy.expr.ExprDateTimeNameSpace.timestamp","polars.lazy.expr.ExprDateTimeNameSpace.to_python_datetime","polars.lazy.expr.ExprDateTimeNameSpace.week","polars.lazy.expr.ExprDateTimeNameSpace.weekday","polars.lazy.expr.ExprDateTimeNameSpace.year","polars.lazy.expr.ExprStringNameSpace.contains","polars.lazy.expr.ExprStringNameSpace.json_path_match","polars.lazy.expr.ExprStringNameSpace.lengths","polars.lazy.expr.ExprStringNameSpace.replace","polars.lazy.expr.ExprStringNameSpace.replace_all","polars.lazy.expr.ExprStringNameSpace.slice","polars.lazy.expr.ExprStringNameSpace.strptime","polars.lazy.expr.ExprStringNameSpace.to_lowercase","polars.lazy.expr.ExprStringNameSpace.to_uppercase","polars.lazy.frame.LazyGroupBy.agg","polars.lazy.frame.LazyGroupBy.apply","polars.lazy.frame.LazyGroupBy.head","polars.lazy.frame.LazyGroupBy.tail","polars.lit","polars.lit_date","polars.map_binary","polars.max","polars.mean","polars.median","polars.min","polars.n_unique","polars.pearson_corr","polars.quantile","polars.read_csv","polars.read_ipc","polars.read_json","polars.read_parquet","polars.read_sql","polars.repeat","polars.scan_csv","polars.scan_parquet","polars.std","polars.sum","polars.tail","polars.to_list","polars.toggle_string_cache","polars.var","polars.when","DataFrame","Expressions","Functions","API reference","Input/output","LazyFrame","Series"],titleterms:{"boolean":397,"function":[397,398],"var":[66,137,176,263,394],agg:[278,367],agg_group:72,agg_list:279,aggreg:[396,397,401,402],alia:73,all:267,ani:268,api:399,append:181,appli:[2,74,182,280,368,396,397,401],arang:269,arg_max:183,arg_min:184,arg_sort:[75,185],arg_tru:186,arg_uniqu:[76,187],arg_wher:270,argsort:188,argsort_bi:271,attribut:[396,397,402],avg:272,backward_fil:77,cach:138,cast:[78,189],chunk_length:190,clone:[3,191],col:273,collect:139,column:[4,397],comput:[396,397,402],concat:274,concat_str:275,config:398,constructor:[396,397,402],contain:[323,358],convers:[396,398,402],count:[79,276,281,298],cov:277,csv:400,cum_max:[80,192],cum_min:[81,193],cum_sum:[82,194],dai:[305,344],datafram:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,396],datetimenamespac:[305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],describ:[5,195],describe_optimized_plan:140,describe_plan:141,descript:[396,401,402],dot:[83,196],downsampl:6,drop:7,drop_column:[142,143],drop_dupl:[8,144],drop_in_plac:9,drop_nul:[10,84,145,197],dt:[85,198],dtype:[11,199],eager:[278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,398],exclud:86,explod:[12,87,146,200],expr:[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],exprdatetimenamespac:[344,345,346,347,348,349,350,351,352,353,354,355,356,357],express:397,exprstringnamespac:[358,359,360,361,362,363,364,365,366],feather:400,fetch:147,fill_nan:[13,148],fill_non:[14,88,149,201],filter:[15,89,150,202],first:[90,151,282,299,334],flatten:91,fold:[16,335],forward_fil:92,frame:[278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,367,368,369,370],frame_equ:17,from_arrow:336,from_dict:337,from_panda:338,from_record:339,get_column:18,get_dummi:340,get_group:283,group:[284,341],groupbi:[19,152,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,396,401],hash:[93,203],hash_row:20,head:[21,94,153,204,285,342,369],height:22,hour:[306,345],hstack:23,input:400,insert_at_idx:24,interpol:[25,95,154,205],ipc:400,is_between:96,is_boolean:206,is_dupl:[26,97,207],is_finit:[98,208],is_first:[99,209],is_float:210,is_in:[100,211],is_infinit:[101,212],is_nan:[102,213],is_not:103,is_not_nan:[104,214],is_not_nul:[105,215],is_nul:[106,216],is_numer:217,is_uniqu:[27,107,218],is_utf8:219,join:[28,155],json:400,json_path_match:[324,359],keep_nam:108,last:[109,156,286,343],lazi:[29,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],lazyfram:[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,401],lazygroupbi:[367,368,369,370],len:220,length:[325,360],limit:[30,157,221],list:110,lit:371,lit_dat:372,lstrip:326,manipul:[396,397,401,402],map:[111,158],map_binari:373,max:[31,112,159,222,287,300,307,374],mean:[32,113,160,223,288,301,308,375],median:[33,114,161,224,289,302,309,376],melt:[34,162],min:[35,115,163,225,290,303,310,377],minut:[311,346],mode:[116,226],month:[312,347],n_chunk:[36,227],n_uniqu:[117,228,291,378],name:[229,397],nanosecond:[313,348],null_count:[37,230],ordinal_dai:[314,349],output:400,over:118,parquet:400,peak_max:231,peak_min:232,pearson_corr:379,pipe:[38,164],pivot:[292,396],pivotop:[298,299,300,301,302,303,304],polar:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395],pow:119,quantil:[39,120,165,233,293,380],read_csv:381,read_ipc:382,read_json:383,read_parquet:384,read_sql:385,rechunk:[40,234],refer:399,reinterpret:[121,235],renam:[41,236],repeat:386,repeat_bi:122,replac:[42,327,361],replace_al:[328,362],replace_at_idx:43,revers:[123,166],rolling_max:237,rolling_mean:238,rolling_min:239,rolling_sum:240,round:[124,241,315,350],row:[44,45],rstrip:329,sampl:[46,242],scan_csv:387,scan_parquet:388,second:[316,351],select:[47,167,294,396,397,401,402],select_al:295,select_at_idx:48,seri:[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,402],series_equ:243,set:244,set_at_idx:245,shape:[49,246],shift:[50,125,168,247],shift_and_fil:[51,126,169],show_graph:170,shrink_to_fit:[52,248],slice:[53,127,171,249,330,363],sort:[54,128,172,250],sort_bi:129,sql:400,stat:[396,401,402],std:[55,130,173,251,389],str:[131,252],strftime:[317,352],string:[397,402],stringcach:266,stringnamespac:[323,324,325,326,327,328,329,330,331,332,333],strptime:[331,364],sum:[56,132,174,253,296,304,390],tail:[57,133,175,254,297,370,391],take:[134,255],take_everi:[135,256],timeseri:[397,402],timestamp:[318,353],to_arrow:[58,257],to_csv:59,to_dummi:60,to_fram:258,to_ipc:61,to_json:62,to_list:[259,392],to_lowercas:[332,365],to_numpi:[63,260],to_panda:64,to_parquet:65,to_python_datetim:[319,354],to_uppercas:[333,366],toggle_string_cach:393,uniqu:[136,261],value_count:262,variou:[396,401,402],view:264,vstack:67,week:[320,355],weekdai:[321,356],when:395,width:68,window:397,with_column:[69,70,177,179],with_column_renam:178,year:[322,357],zip_with:265}})